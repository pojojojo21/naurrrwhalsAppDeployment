{"ast":null,"code":"/* eslint-disable object-property-newline */\n/* eslint-disable camelcase */\nimport axios from 'axios';\nimport rootURL from './url';\n\n// =====================================================\n// === The functions corresponding to the actual API ===\n// =====================================================\n\n// GET /wellness/survey/user\nasync function getWellnessSurvey(user) {\n  const url = `${rootURL}/wellness/survey/${user}`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (err) {\n    throw new Error(`Error when calling ${url}`);\n  }\n}\n\n// PUT /wellness/survey/user\nasync function putWellnessSurvey(user, survey) {\n  const url = `${rootURL}/wellness/survey/${user}`;\n  try {\n    const response = await axios.put(url, survey);\n    return response.data;\n  } catch (err) {\n    throw new Error(`Error when calling ${url}`);\n  }\n}\n\n// POST /wellness/survey/user\nasync function postWellnessSurvey(user, survey) {\n  const url = `${rootURL}/wellness/survey/${user}`;\n  try {\n    const response = await axios.post(url, survey);\n    return response.data;\n  } catch (err) {\n    throw new Error(`Error when calling ${url}`);\n  }\n}\n// Exactly the same as PUT, added for compatibility\n\n// =========================================\n// === Functions added for compatability ===\n// =========================================\n\nfunction propertyGetter(property) {\n  return async username => {\n    try {\n      return (await getWellnessSurvey(username))[property];\n    } catch (err) {\n      return null;\n    }\n  };\n}\nfunction propertyPutter(property) {\n  return async (username, v) => {\n    try {\n      return (await putWellnessSurvey(username, {\n        [property]: v\n      }))[property];\n    } catch (err) {\n      return null;\n    }\n  };\n}\n\n// SURVEY.js API - update respective inputs as user fills out the survey\n\nconst PUT_sleepSat = propertyPutter('sleepSat');\nconst PUT_workSat = propertyPutter('workSat');\nconst PUT_relaxSat = propertyPutter('relaxSat');\nconst PUT_mood = propertyPutter('mood');\nconst PUT_priority = propertyPutter('priority');\n\n// PRIORITY.js API - update respective inputs as user fills out their priority\n\nconst PUT_desiredHoursSleep = propertyPutter('desired_hours_sleep');\nconst PUT_desiredTimeSleep = propertyPutter('desired_time_sleep');\nconst PUT_desiredHoursWork = propertyPutter('desired_hours_work');\nconst PUT_desiredWorkBlock = propertyPutter('desired_block_work');\nconst PUT_desiredWorkEndTime = propertyPutter('desired_time_work');\nconst PUT_desiredHoursRelax = propertyPutter('desired_hours_relax');\nconst PUT_desiredRelaxActivity = propertyPutter('desired_activity');\n\n// RECOMMENDATIONS.js API\n\nconst GET_desiredHoursSleep = propertyGetter('desired_hours_sleep');\nconst GET_desiredTimeSleep = propertyGetter('desired_time_sleep');\nconst GET_desiredHoursWork = propertyGetter('desired_hours_work');\nconst GET_desiredWorkBlock = propertyGetter('desired_block_work');\nconst GET_desiredWorkEndTime = propertyGetter('desired_time_work');\nconst GET_desiredHoursRelax = propertyGetter('desired_hours_relax');\nconst GET_desiredRelaxActivity = propertyGetter('desired_activity');\n\n// ALL TOGETHER - After updating all survey inputs from defaults, post the latest survey to the db\nconst POST_dailySurvey = postWellnessSurvey;\nexport { PUT_sleepSat, PUT_workSat, PUT_relaxSat, PUT_mood, PUT_priority, PUT_desiredHoursSleep, PUT_desiredTimeSleep, PUT_desiredHoursWork, PUT_desiredWorkBlock, PUT_desiredWorkEndTime, PUT_desiredHoursRelax, PUT_desiredRelaxActivity, GET_desiredHoursSleep, GET_desiredTimeSleep, GET_desiredHoursWork, GET_desiredWorkBlock, GET_desiredWorkEndTime, GET_desiredHoursRelax, GET_desiredRelaxActivity, POST_dailySurvey };","map":{"version":3,"names":["axios","rootURL","getWellnessSurvey","user","url","response","get","data","err","Error","putWellnessSurvey","survey","put","postWellnessSurvey","post","propertyGetter","property","username","propertyPutter","v","PUT_sleepSat","PUT_workSat","PUT_relaxSat","PUT_mood","PUT_priority","PUT_desiredHoursSleep","PUT_desiredTimeSleep","PUT_desiredHoursWork","PUT_desiredWorkBlock","PUT_desiredWorkEndTime","PUT_desiredHoursRelax","PUT_desiredRelaxActivity","GET_desiredHoursSleep","GET_desiredTimeSleep","GET_desiredHoursWork","GET_desiredWorkBlock","GET_desiredWorkEndTime","GET_desiredHoursRelax","GET_desiredRelaxActivity","POST_dailySurvey"],"sources":["C:/Users/pojoj/Documents/CIS350APP/naurrrwhalsAppDeployment/naur-app/src/modules/wellnessApi.js"],"sourcesContent":["/* eslint-disable object-property-newline */\r\n/* eslint-disable camelcase */\r\nimport axios from 'axios';\r\n\r\nimport rootURL from './url';\r\n\r\n// =====================================================\r\n// === The functions corresponding to the actual API ===\r\n// =====================================================\r\n\r\n// GET /wellness/survey/user\r\nasync function getWellnessSurvey(user) {\r\n  const url = `${rootURL}/wellness/survey/${user}`;\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (err) {\r\n    throw new Error(`Error when calling ${url}`);\r\n  }\r\n}\r\n\r\n// PUT /wellness/survey/user\r\nasync function putWellnessSurvey(user, survey) {\r\n  const url = `${rootURL}/wellness/survey/${user}`;\r\n  try {\r\n    const response = await axios.put(url, survey);\r\n    return response.data;\r\n  } catch (err) {\r\n    throw new Error(`Error when calling ${url}`);\r\n  }\r\n}\r\n\r\n// POST /wellness/survey/user\r\nasync function postWellnessSurvey(user, survey) {\r\n  const url = `${rootURL}/wellness/survey/${user}`;\r\n  try {\r\n    const response = await axios.post(url, survey);\r\n    return response.data;\r\n  } catch (err) {\r\n    throw new Error(`Error when calling ${url}`);\r\n  }\r\n}\r\n// Exactly the same as PUT, added for compatibility\r\n\r\n// =========================================\r\n// === Functions added for compatability ===\r\n// =========================================\r\n\r\nfunction propertyGetter(property) {\r\n  return async (username) => {\r\n    try {\r\n      return (await getWellnessSurvey(username))[property];\r\n    } catch (err) {\r\n      return null;\r\n    }\r\n  };\r\n}\r\n\r\nfunction propertyPutter(property) {\r\n  return async (username, v) => {\r\n    try {\r\n      return (await putWellnessSurvey(username, { [property]: v }))[property];\r\n    } catch (err) {\r\n      return null;\r\n    }\r\n  };\r\n}\r\n\r\n// SURVEY.js API - update respective inputs as user fills out the survey\r\n\r\nconst PUT_sleepSat = propertyPutter('sleepSat');\r\nconst PUT_workSat = propertyPutter('workSat');\r\nconst PUT_relaxSat = propertyPutter('relaxSat');\r\nconst PUT_mood = propertyPutter('mood');\r\nconst PUT_priority = propertyPutter('priority');\r\n\r\n// PRIORITY.js API - update respective inputs as user fills out their priority\r\n\r\nconst PUT_desiredHoursSleep = propertyPutter('desired_hours_sleep');\r\nconst PUT_desiredTimeSleep = propertyPutter('desired_time_sleep');\r\nconst PUT_desiredHoursWork = propertyPutter('desired_hours_work');\r\nconst PUT_desiredWorkBlock = propertyPutter('desired_block_work');\r\nconst PUT_desiredWorkEndTime = propertyPutter('desired_time_work');\r\nconst PUT_desiredHoursRelax = propertyPutter('desired_hours_relax');\r\nconst PUT_desiredRelaxActivity = propertyPutter('desired_activity');\r\n\r\n// RECOMMENDATIONS.js API\r\n\r\nconst GET_desiredHoursSleep = propertyGetter('desired_hours_sleep');\r\nconst GET_desiredTimeSleep = propertyGetter('desired_time_sleep');\r\nconst GET_desiredHoursWork = propertyGetter('desired_hours_work');\r\nconst GET_desiredWorkBlock = propertyGetter('desired_block_work');\r\nconst GET_desiredWorkEndTime = propertyGetter('desired_time_work');\r\nconst GET_desiredHoursRelax = propertyGetter('desired_hours_relax');\r\nconst GET_desiredRelaxActivity = propertyGetter('desired_activity');\r\n\r\n// ALL TOGETHER - After updating all survey inputs from defaults, post the latest survey to the db\r\nconst POST_dailySurvey = postWellnessSurvey;\r\n\r\nexport {\r\n  PUT_sleepSat, PUT_workSat, PUT_relaxSat, PUT_mood, PUT_priority,\r\n  PUT_desiredHoursSleep, PUT_desiredTimeSleep, PUT_desiredHoursWork,\r\n  PUT_desiredWorkBlock, PUT_desiredWorkEndTime, PUT_desiredHoursRelax, PUT_desiredRelaxActivity,\r\n  GET_desiredHoursSleep, GET_desiredTimeSleep, GET_desiredHoursWork,\r\n  GET_desiredWorkBlock, GET_desiredWorkEndTime, GET_desiredHoursRelax, GET_desiredRelaxActivity,\r\n  POST_dailySurvey,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}