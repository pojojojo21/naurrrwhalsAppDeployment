{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pojoj\\\\Documents\\\\CIS350APP\\\\naurrrwhalsAppDeployment\\\\naur-app\\\\src\\\\components\\\\Recommendations.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable camelcase */\nimport React, { useState } from 'react';\nimport { GET_desiredHoursSleep, GET_desiredTimeSleep, GET_desiredHoursWork, GET_desiredWorkBlock, GET_desiredWorkEndTime, GET_desiredHoursRelax, GET_desiredRelaxActivity } from '../modules/wellnessApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Recommendations(_ref) {\n  _s();\n\n  let {\n    username\n  } = _ref;\n  // allow form inputs\n  const [currHrSleep, setCurrHoursSleep] = useState(8);\n  const [currTSleep, setCurrTimeSleep] = useState(2200);\n  const [currHrWork, setCurrHoursWork] = useState(8);\n  const [currWkBlock, setCurrWorkBlock] = useState(45);\n  const [currWkEndTime, setCurrWorkEndTime] = useState(2200);\n  const [currHrRelax, setCurrHourRelax] = useState(8); // allow rec outputs\n\n  const [sleepSugg, setSleepSugg] = useState([]);\n  const [workSugg, setWorkSugg] = useState([]);\n  const [relaxSugg, setRelaxSugg] = useState(''); // recommendation functions - computes & interprets\n\n  async function computeSleepSuggestions(currHoursSleep, currTimeSleep) {\n    const desiredHoursSleep = (await GET_desiredHoursSleep(username)) || 0;\n    const desiredTimeSleep = (await GET_desiredTimeSleep(username)) || Infinity;\n    const hoursRec = Math.max(desiredHoursSleep, 6) - currHoursSleep;\n    const timeRec = desiredTimeSleep - currTimeSleep;\n    return [hoursRec, timeRec];\n  }\n\n  function interpretSleepSuggestions(_ref2) {\n    let [hoursRec, timeRec] = _ref2;\n    let sleepHr = '';\n    let sleepTime = '';\n\n    if (hoursRec > 0) {\n      sleepHr = 'Need to sleep more hours';\n    } else {\n      sleepHr = 'Good job! You are sleeping enough hours';\n    }\n\n    if (timeRec < 0) {\n      sleepTime = 'Need to sleep earlier';\n    } else {\n      sleepTime = 'Good job! You are sleeping on time';\n    }\n\n    return [sleepHr, sleepTime];\n  }\n\n  async function computeWorkSuggestions(currHoursWork, currWorkBlock, currWorkEndTime) {\n    const desiredHoursWork = (await GET_desiredHoursWork(username)) || Infinity;\n    const desiredWorkBlock = (await GET_desiredWorkBlock(username)) || Infinity;\n    const desiredWorkEndTime = (await GET_desiredWorkEndTime(username)) || Infinity;\n    const hoursRec = desiredHoursWork - currHoursWork;\n    const blockRec = desiredWorkBlock - currWorkBlock;\n    const timeRec = desiredWorkEndTime - currWorkEndTime;\n    return [hoursRec, blockRec, timeRec];\n  }\n\n  function interpretWorkSuggestions(_ref3) {\n    let [hoursRec, blockRec, timeRec] = _ref3;\n    let workHr = '';\n    let workBlock = '';\n    let workTime = '';\n\n    if (hoursRec < 0) {\n      workHr = 'Need to work fewer hours';\n    } else {\n      workHr = 'Good job! You are working enough hours';\n    }\n\n    if (blockRec < 0) {\n      workBlock = 'Need to work for less time at a stretch';\n    } else {\n      workBlock = 'Good job! You are working for a healthy amount of time at a stretch';\n    }\n\n    if (timeRec < 0) {\n      workTime = 'Need to end work earlier';\n    } else {\n      workTime = 'Good job! You are ending work at a good time';\n    }\n\n    return [workHr, workBlock, workTime];\n  }\n\n  async function computeRelaxSuggestions(currHoursRelax) {\n    const desiredHoursRelax = (await GET_desiredHoursRelax(username)) || 0;\n    const desiredRelaxActivity = (await GET_desiredRelaxActivity(username)) || 'Riding a bike';\n    const hoursRec = desiredHoursRelax - currHoursRelax;\n    return [hoursRec, desiredRelaxActivity];\n  }\n\n  function interpretRelaxSuggestions(_ref4) {\n    let [hoursRec, desiredRelaxActivity] = _ref4;\n    let relaxHr = '';\n\n    if (hoursRec > 0) {\n      relaxHr = 'Need to relax more hours. Try: ';\n      relaxHr += desiredRelaxActivity;\n    } else {\n      relaxHr = 'Good job! You are relaxing enough hours';\n    }\n\n    return relaxHr;\n  } // trigger computations\n\n\n  function handleRec(e) {\n    e.preventDefault();\n\n    (async () => {\n      setSleepSugg(interpretSleepSuggestions(await computeSleepSuggestions(currHrSleep, currTSleep)));\n      setWorkSugg(interpretWorkSuggestions(await computeWorkSuggestions(currHrWork, currWkBlock, currWkEndTime)));\n      setRelaxSugg(interpretRelaxSuggestions(await computeRelaxSuggestions(currHrRelax)));\n    })();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Actual Sleep (Hours)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"hoursSleep\",\n        placeholder: \"8\",\n        min: \"0\",\n        max: \"24\",\n        step: \"1\",\n        onChange: e => setCurrHoursSleep(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Actual Bedtime [24h format]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"sleepBedtime\",\n        placeholder: \"2200\",\n        min: \"0000\",\n        max: \"2359\",\n        step: \"1\",\n        onChange: e => setCurrTimeSleep(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Actual Work (Hours)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"hoursWork\",\n        placeholder: \"8\",\n        min: \"0\",\n        max: \"24\",\n        step: \"1\",\n        onChange: e => setCurrHoursWork(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Actual Work Block (Minutes)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"workBlock\",\n        placeholder: \"45\",\n        min: \"0\",\n        step: \"1\",\n        onChange: e => setCurrWorkBlock(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Actual Endtime [24h format]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"workEndtime\",\n        placeholder: \"2200\",\n        min: \"0000\",\n        max: \"2359\",\n        step: \"1\",\n        onChange: e => setCurrWorkEndTime(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Actual Relaxation (Hours)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"hoursRelax\",\n        placeholder: \"8\",\n        min: \"0\",\n        max: \"24\",\n        step: \"1\",\n        onChange: e => setCurrHourRelax(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleRec,\n        children: \"Compute Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: sleepSugg[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: sleepSugg[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: workSugg[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: workSugg[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: workSugg[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: relaxSugg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Recommendations, \"lCku24UZdYG1XWP+fUAC4SLN2II=\");\n\n_c = Recommendations;\nexport default Recommendations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"sources":["C:/Users/pojoj/Documents/CIS350APP/naurrrwhalsAppDeployment/naur-app/src/components/Recommendations.js"],"names":["React","useState","GET_desiredHoursSleep","GET_desiredTimeSleep","GET_desiredHoursWork","GET_desiredWorkBlock","GET_desiredWorkEndTime","GET_desiredHoursRelax","GET_desiredRelaxActivity","Recommendations","username","currHrSleep","setCurrHoursSleep","currTSleep","setCurrTimeSleep","currHrWork","setCurrHoursWork","currWkBlock","setCurrWorkBlock","currWkEndTime","setCurrWorkEndTime","currHrRelax","setCurrHourRelax","sleepSugg","setSleepSugg","workSugg","setWorkSugg","relaxSugg","setRelaxSugg","computeSleepSuggestions","currHoursSleep","currTimeSleep","desiredHoursSleep","desiredTimeSleep","Infinity","hoursRec","Math","max","timeRec","interpretSleepSuggestions","sleepHr","sleepTime","computeWorkSuggestions","currHoursWork","currWorkBlock","currWorkEndTime","desiredHoursWork","desiredWorkBlock","desiredWorkEndTime","blockRec","interpretWorkSuggestions","workHr","workBlock","workTime","computeRelaxSuggestions","currHoursRelax","desiredHoursRelax","desiredRelaxActivity","interpretRelaxSuggestions","relaxHr","handleRec","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\r\n\r\nimport React, { useState } from 'react';\r\nimport {\r\n  GET_desiredHoursSleep, GET_desiredTimeSleep,\r\n  GET_desiredHoursWork, GET_desiredWorkBlock,\r\n  GET_desiredWorkEndTime, GET_desiredHoursRelax,\r\n  GET_desiredRelaxActivity,\r\n} from '../modules/wellnessApi';\r\n\r\nfunction Recommendations({ username }) {\r\n  // allow form inputs\r\n  const [currHrSleep, setCurrHoursSleep] = useState(8);\r\n  const [currTSleep, setCurrTimeSleep] = useState(2200);\r\n  const [currHrWork, setCurrHoursWork] = useState(8);\r\n  const [currWkBlock, setCurrWorkBlock] = useState(45);\r\n  const [currWkEndTime, setCurrWorkEndTime] = useState(2200);\r\n  const [currHrRelax, setCurrHourRelax] = useState(8);\r\n\r\n  // allow rec outputs\r\n  const [sleepSugg, setSleepSugg] = useState([]);\r\n  const [workSugg, setWorkSugg] = useState([]);\r\n  const [relaxSugg, setRelaxSugg] = useState('');\r\n\r\n  // recommendation functions - computes & interprets\r\n  async function computeSleepSuggestions(currHoursSleep, currTimeSleep) {\r\n    const desiredHoursSleep = (await GET_desiredHoursSleep(username)) || 0;\r\n    const desiredTimeSleep = (await GET_desiredTimeSleep(username)) || Infinity;\r\n\r\n    const hoursRec = Math.max(desiredHoursSleep, 6) - currHoursSleep;\r\n    const timeRec = desiredTimeSleep - currTimeSleep;\r\n\r\n    return [hoursRec, timeRec];\r\n  }\r\n\r\n  function interpretSleepSuggestions([hoursRec, timeRec]) {\r\n    let sleepHr = '';\r\n    let sleepTime = '';\r\n    if (hoursRec > 0) {\r\n      sleepHr = 'Need to sleep more hours';\r\n    } else {\r\n      sleepHr = 'Good job! You are sleeping enough hours';\r\n    }\r\n\r\n    if (timeRec < 0) {\r\n      sleepTime = 'Need to sleep earlier';\r\n    } else {\r\n      sleepTime = 'Good job! You are sleeping on time';\r\n    }\r\n\r\n    return [sleepHr, sleepTime];\r\n  }\r\n\r\n  async function computeWorkSuggestions(currHoursWork, currWorkBlock, currWorkEndTime) {\r\n    const desiredHoursWork = (await GET_desiredHoursWork(username)) || Infinity;\r\n    const desiredWorkBlock = (await GET_desiredWorkBlock(username)) || Infinity;\r\n    const desiredWorkEndTime = (await GET_desiredWorkEndTime(username)) || Infinity;\r\n\r\n    const hoursRec = desiredHoursWork - currHoursWork;\r\n    const blockRec = desiredWorkBlock - currWorkBlock;\r\n    const timeRec = desiredWorkEndTime - currWorkEndTime;\r\n\r\n    return [hoursRec, blockRec, timeRec];\r\n  }\r\n\r\n  function interpretWorkSuggestions([hoursRec, blockRec, timeRec]) {\r\n    let workHr = '';\r\n    let workBlock = '';\r\n    let workTime = '';\r\n    if (hoursRec < 0) {\r\n      workHr = 'Need to work fewer hours';\r\n    } else {\r\n      workHr = 'Good job! You are working enough hours';\r\n    }\r\n\r\n    if (blockRec < 0) {\r\n      workBlock = 'Need to work for less time at a stretch';\r\n    } else {\r\n      workBlock = 'Good job! You are working for a healthy amount of time at a stretch';\r\n    }\r\n\r\n    if (timeRec < 0) {\r\n      workTime = 'Need to end work earlier';\r\n    } else {\r\n      workTime = 'Good job! You are ending work at a good time';\r\n    }\r\n\r\n    return [workHr, workBlock, workTime];\r\n  }\r\n\r\n  async function computeRelaxSuggestions(currHoursRelax) {\r\n    const desiredHoursRelax = (await GET_desiredHoursRelax(username)) || 0;\r\n    const desiredRelaxActivity = await GET_desiredRelaxActivity(username) || 'Riding a bike';\r\n\r\n    const hoursRec = desiredHoursRelax - currHoursRelax;\r\n\r\n    return [hoursRec, desiredRelaxActivity];\r\n  }\r\n\r\n  function interpretRelaxSuggestions([hoursRec, desiredRelaxActivity]) {\r\n    let relaxHr = '';\r\n    if (hoursRec > 0) {\r\n      relaxHr = 'Need to relax more hours. Try: ';\r\n      relaxHr += desiredRelaxActivity;\r\n    } else {\r\n      relaxHr = 'Good job! You are relaxing enough hours';\r\n    }\r\n\r\n    return relaxHr;\r\n  }\r\n\r\n  // trigger computations\r\n  function handleRec(e) {\r\n    e.preventDefault();\r\n    (async () => {\r\n      setSleepSugg(interpretSleepSuggestions(\r\n        await computeSleepSuggestions(currHrSleep, currTSleep),\r\n      ));\r\n\r\n      setWorkSugg(interpretWorkSuggestions(\r\n        await computeWorkSuggestions(currHrWork, currWkBlock, currWkEndTime),\r\n      ));\r\n\r\n      setRelaxSugg(interpretRelaxSuggestions(\r\n        await computeRelaxSuggestions(currHrRelax),\r\n      ));\r\n    })();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Recommendations</h2>\r\n      <form>\r\n        <h4>Actual Sleep (Hours)</h4>\r\n        <input type=\"number\" id=\"hoursSleep\" placeholder=\"8\" min=\"0\" max=\"24\" step=\"1\" onChange={(e) => setCurrHoursSleep(e.target.value)} />\r\n        <h4>Actual Bedtime [24h format]</h4>\r\n        <input type=\"number\" id=\"sleepBedtime\" placeholder=\"2200\" min=\"0000\" max=\"2359\" step=\"1\" onChange={(e) => setCurrTimeSleep(e.target.value)} />\r\n        <h4>Actual Work (Hours)</h4>\r\n        <input type=\"number\" id=\"hoursWork\" placeholder=\"8\" min=\"0\" max=\"24\" step=\"1\" onChange={(e) => setCurrHoursWork(e.target.value)} />\r\n        <h4>Actual Work Block (Minutes)</h4>\r\n        <input type=\"number\" id=\"workBlock\" placeholder=\"45\" min=\"0\" step=\"1\" onChange={(e) => setCurrWorkBlock(e.target.value)} />\r\n        <h4>Actual Endtime [24h format]</h4>\r\n        <input type=\"number\" id=\"workEndtime\" placeholder=\"2200\" min=\"0000\" max=\"2359\" step=\"1\" onChange={(e) => setCurrWorkEndTime(e.target.value)} />\r\n        <h4>Actual Relaxation (Hours)</h4>\r\n        <input type=\"number\" id=\"hoursRelax\" placeholder=\"8\" min=\"0\" max=\"24\" step=\"1\" onChange={(e) => setCurrHourRelax(e.target.value)} />\r\n        <button type=\"submit\" onClick={handleRec}>Compute Recommendations</button>\r\n      </form>\r\n      <h4>\r\n        {sleepSugg[0]}\r\n      </h4>\r\n      <h4>\r\n        {sleepSugg[1]}\r\n      </h4>\r\n      <h4>\r\n        {workSugg[0]}\r\n      </h4>\r\n      <h4>\r\n        {workSugg[1]}\r\n      </h4>\r\n      <h4>\r\n        {workSugg[2]}\r\n      </h4>\r\n      <h4>\r\n        {relaxSugg}\r\n      </h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Recommendations;\r\n"]},"metadata":{},"sourceType":"module"}