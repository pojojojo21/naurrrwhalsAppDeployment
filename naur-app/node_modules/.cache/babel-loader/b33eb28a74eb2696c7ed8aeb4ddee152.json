{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pojoj\\\\Documents\\\\CIS350APP\\\\naurrrwhalsAppDeployment\\\\naur-app\\\\src\\\\components\\\\regLock.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useRef } from 'react';\nimport { getSecurityQuestions, postResetPassword } from '../modules/loginApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegLock(_ref) {\n  _s();\n\n  let {\n    setLockout,\n    username\n  } = _ref;\n  const [questions, setQuestions] = useState([]);\n  const gotQuestions = useRef(false);\n\n  if (!gotQuestions.current) {\n    gotQuestions.current = true;\n\n    (async () => {\n      setQuestions(await getSecurityQuestions(username));\n    })();\n  }\n\n  function handleSubmit(e) {\n    var _document$getElementB2;\n\n    e.preventDefault();\n    const questionsAndAnswers = questions.map((q, i) => {\n      var _document$getElementB;\n\n      return {\n        question: q,\n        answer: (_document$getElementB = document.getElementById(`answer${i}`)) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.value\n      };\n    });\n    const newpass = (_document$getElementB2 = document.getElementById('newpass')) === null || _document$getElementB2 === void 0 ? void 0 : _document$getElementB2.value;\n\n    (async () => {\n      try {\n        const status = await postResetPassword(username, newpass, questionsAndAnswers);\n\n        if (status === 200) {\n          setLockout(false);\n        }\n      } catch (err) {//\n      }\n    })();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Too many password attempts! Choose a new password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"newPasswordWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"newpass\",\n        className: \"newpass\",\n        type: \"text\",\n        placeholder: \"New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"securityQs\",\n      children: [questions.map((question, i) =>\n      /*#__PURE__*/\n      // eslint-disable-next-line react/no-array-index-key\n      _jsxDEV(\"div\", {\n        id: `questionholder${i}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: `question${i}`,\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: `answer${i}`,\n          type: \"text\",\n          placeholder: `Question ${i + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, `${i}: ${question}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleSubmit,\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegLock, \"c/K8VhpTSSH7mpXOx03rLiRH4LI=\");\n\n_c = RegLock;\nexport default RegLock;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegLock\");","map":{"version":3,"sources":["C:/Users/pojoj/Documents/CIS350APP/naurrrwhalsAppDeployment/naur-app/src/components/regLock.js"],"names":["React","useState","useRef","getSecurityQuestions","postResetPassword","RegLock","setLockout","username","questions","setQuestions","gotQuestions","current","handleSubmit","e","preventDefault","questionsAndAnswers","map","q","i","question","answer","document","getElementById","value","newpass","status","err"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,oBAAT,EAA+BC,iBAA/B,QAAwD,qBAAxD;;;AAEA,SAASC,OAAT,OAA2C;AAAA;;AAAA,MAA1B;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAA0B;AACzC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMS,YAAY,GAAGR,MAAM,CAAC,KAAD,CAA3B;;AAEA,MAAI,CAACQ,YAAY,CAACC,OAAlB,EAA2B;AACzBD,IAAAA,YAAY,CAACC,OAAb,GAAuB,IAAvB;;AACA,KAAC,YAAY;AACXF,MAAAA,YAAY,CAAC,MAAMN,oBAAoB,CAACI,QAAD,CAA3B,CAAZ;AACD,KAFD;AAGD;;AAED,WAASK,YAAT,CAAsBC,CAAtB,EAAyB;AAAA;;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,mBAAmB,GAAGP,SAAS,CAACQ,GAAV,CAAc,CAACC,CAAD,EAAIC,CAAJ;AAAA;;AAAA,aACxC;AACEC,QAAAA,QAAQ,EAAEF,CADZ;AAEEG,QAAAA,MAAM,2BAAEC,QAAQ,CAACC,cAAT,CAAyB,SAAQJ,CAAE,EAAnC,CAAF,0DAAE,sBAAuCK;AAFjD,OADwC;AAAA,KAAd,CAA5B;AAMA,UAAMC,OAAO,6BAAGH,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAH,2DAAG,uBAAoCC,KAApD;;AAEA,KAAC,YAAY;AACX,UAAI;AACF,cAAME,MAAM,GAAG,MAAMrB,iBAAiB,CAACG,QAAD,EAAWiB,OAAX,EAAoBT,mBAApB,CAAtC;;AACA,YAAIU,MAAM,KAAK,GAAf,EAAoB;AAClBnB,UAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,OALD,CAKE,OAAOoB,GAAP,EAAY,CACZ;AACD;AACF,KATD;AAUD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,6BACE;AAAO,QAAA,EAAE,EAAC,SAAV;AAAoB,QAAA,SAAS,EAAC,SAA9B;AAAwC,QAAA,IAAI,EAAC,MAA7C;AAAoD,QAAA,WAAW,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,iBAKGlB,SAAS,CAACQ,GAAV,CAAc,CAACG,QAAD,EAAWD,CAAX;AAAA;AACb;AACA;AAA+B,QAAA,EAAE,EAAG,iBAAgBA,CAAE,EAAtD;AAAA,gCACE;AAAG,UAAA,EAAE,EAAG,WAAUA,CAAE,EAApB;AAAA,oBACGC;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAO,UAAA,EAAE,EAAG,SAAQD,CAAE,EAAtB;AAAyB,UAAA,IAAI,EAAC,MAA9B;AAAqC,UAAA,WAAW,EAAG,YAAWA,CAAC,GAAG,CAAE;AAApE;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA,SAAW,GAAEA,CAAE,KAAIC,QAAS,EAA5B;AAAA;AAAA;AAAA;AAAA,cAFD,CALH,eAcE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEP,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GAzDQP,O;;KAAAA,O;AA2DT,eAAeA,OAAf","sourcesContent":["import { React, useState, useRef } from 'react';\r\nimport { getSecurityQuestions, postResetPassword } from '../modules/loginApi';\r\n\r\nfunction RegLock({ setLockout, username }) {\r\n  const [questions, setQuestions] = useState([]);\r\n  const gotQuestions = useRef(false);\r\n\r\n  if (!gotQuestions.current) {\r\n    gotQuestions.current = true;\r\n    (async () => {\r\n      setQuestions(await getSecurityQuestions(username));\r\n    })();\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const questionsAndAnswers = questions.map((q, i) => (\r\n      {\r\n        question: q,\r\n        answer: document.getElementById(`answer${i}`)?.value,\r\n      }\r\n    ));\r\n    const newpass = document.getElementById('newpass')?.value;\r\n\r\n    (async () => {\r\n      try {\r\n        const status = await postResetPassword(username, newpass, questionsAndAnswers);\r\n        if (status === 200) {\r\n          setLockout(false);\r\n        }\r\n      } catch (err) {\r\n        //\r\n      }\r\n    })();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p>Too many password attempts! Choose a new password</p>\r\n      <div className=\"newPasswordWrapper\">\r\n        <input id=\"newpass\" className=\"newpass\" type=\"text\" placeholder=\"New Password\" />\r\n      </div>\r\n      <div className=\"securityQs\">\r\n        {/* <p>\r\n          $\r\n          {userObj.securityQuestions.first}\r\n        </p> */}\r\n        {questions.map((question, i) => (\r\n          // eslint-disable-next-line react/no-array-index-key\r\n          <div key={`${i}: ${question}`} id={`questionholder${i}`}>\r\n            <p id={`question${i}`}>\r\n              {question}\r\n            </p>\r\n            <input id={`answer${i}`} type=\"text\" placeholder={`Question ${i + 1}`} />\r\n          </div>\r\n        ))}\r\n        <button type=\"submit\" onClick={handleSubmit}>OK</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegLock;\r\n"]},"metadata":{},"sourceType":"module"}