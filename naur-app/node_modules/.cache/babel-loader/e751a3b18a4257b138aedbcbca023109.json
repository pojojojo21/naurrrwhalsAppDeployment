{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pojoj\\\\Documents\\\\CIS350APP\\\\naurrrwhalsAppDeployment\\\\naur-app\\\\src\\\\components\\\\Calendar.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport '../assets/Calendar.css';\nimport { FaCalendarAlt } from 'react-icons/fa';\nimport { getCalendarEventList, postCalendarEventCreate, deleteCalendarEventEventID, getCalendarBlobList, postCalendarBlobCreate, postCalendarBlobBlobID, deleteCalendarBlobBlobID } from '../modules/calendarApi';\nimport { dateToStringLocal, combineDateTimeString, extractTimeString, stringToDatetimeLocal, stringToDateLocal, extractDateString } from '../modules/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Calendar(_ref) {\n  _s();\n\n  let {\n    username\n  } = _ref;\n  const [date, setDate] = useState(dateToStringLocal(new Date())); // eslint-disable-next-line no-unused-vars\n\n  const [_updateListValue, updateLists] = useState(0);\n  return /*#__PURE__*/_jsxDEV(CalendarContainer, {\n    username: username,\n    date: date,\n    setDate: setDate,\n    eventListPromise: getCalendarEventList(username),\n    blobListPromise: getCalendarBlobList(date, username),\n    updateLists: updateLists\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Calendar, \"TiYzL/pSJpgRjnJcDp1pHelDSLA=\");\n\n_c = Calendar;\n\nfunction CalendarContainer(_ref2) {\n  _s2();\n\n  let {\n    username,\n    date,\n    setDate,\n    eventListPromise,\n    blobListPromise,\n    updateLists\n  } = _ref2;\n  const [eventList, setEventList] = useState([]);\n  eventListPromise.then(value => {\n    setEventList(value);\n  });\n  const [blobList, setBlobList] = useState([]);\n  blobListPromise.then(value => {\n    setBlobList(value);\n  });\n  const [selectedBlob, setSelectedBlob] = useState(''); // console.log('CalendarContainer rerendered');\n  // console.log('eventList value:');\n  // console.log(eventList);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"editBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"topBar\",\n        children: [/*#__PURE__*/_jsxDEV(FaCalendarAlt, {\n          id: \"top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(DatePicker, {\n          date: date,\n          setDate: setDate,\n          setSelectedBlob: setSelectedBlob\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EventAdder, {\n        username: username,\n        updateLists: updateLists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BlobAdder, {\n        username: username,\n        eventList: eventList,\n        date: date,\n        updateLists: updateLists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalendarView, {\n      blobList: blobList,\n      selectedBlob: selectedBlob,\n      setSelectedBlob: setSelectedBlob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BlobEditor, {\n      username: username,\n      date: date,\n      selectedBlob: selectedBlob,\n      setSelectedBlob: setSelectedBlob,\n      updateLists: updateLists\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(CalendarContainer, \"H1W+aR0lfMPMMh62xw1auufbZ9U=\");\n\n_c2 = CalendarContainer;\n\nfunction EventAdder(_ref3) {\n  let {\n    username,\n    updateLists\n  } = _ref3;\n\n  function createEvent() {\n    const eventNameInput = document.getElementById('eventnameinput');\n    const eventColorPicker = document.getElementById('eventcolorpicker');\n    const eventName = eventNameInput.value;\n    const eventColor = eventColorPicker.value;\n    eventNameInput.value = 'Default Event Name';\n    eventColorPicker.value = '#888888'; // eslint-disable-next-line max-len\n\n    (async function anon1BlobAdder() {\n      await postCalendarEventCreate(username, eventName, eventColor);\n      updateLists(val => !val);\n    })();\n  } // console.log('EventAdder rerendered');\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"eventadder\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"eventnameinput\",\n        children: [\"Event Name:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"eventnameinput\",\n          className: \"calLabel\",\n          defaultValue: \"Default Event Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"eventcolorpicker\",\n        children: [\"Event Color:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          id: \"eventcolorpicker\",\n          className: \"calLabel\",\n          defaultValue: \"#888888\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Create New Event\",\n        className: \"calLabel\",\n        onClick: createEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = EventAdder;\n\nfunction BlobAdder(_ref4) {\n  let {\n    username,\n    eventList,\n    updateLists,\n    date\n  } = _ref4;\n\n  // console.log('BlobAdder rerendered');\n  // console.log('eventList value:');\n  // console.log(eventList);\n  function createBlob() {\n    const eventPicker = document.getElementById('eventpicker');\n    const startTimePicker = document.getElementById('starttimepicker');\n    const endTimePicker = document.getElementById('endtimepicker');\n    const eventID = eventPicker.value;\n    const startDateTime = combineDateTimeString(date, startTimePicker.value);\n    const endDateTime = combineDateTimeString(date, endTimePicker.value);\n    startTimePicker.value = '';\n    endTimePicker.value = '';\n\n    (async function anon1BlobAdder() {\n      await postCalendarBlobCreate(eventID, username, startDateTime, endDateTime);\n      updateLists(val => !val);\n    })();\n  }\n\n  function deleteEvent() {\n    const eventPicker = document.getElementById('eventpicker');\n    const eventID = eventPicker.value;\n    const startTimePicker = document.getElementById('starttimepicker');\n    const endTimePicker = document.getElementById('endtimepicker');\n    startTimePicker.value = '';\n    endTimePicker.value = '';\n\n    (async function anon2BlobAdder() {\n      await deleteCalendarEventEventID(eventID, username);\n      updateLists(val => !val);\n    })();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"blobadder\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Events to Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"eventpicker\",\n        children: [\"Event:\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"eventpicker\",\n          className: \"calLabel\",\n          children: eventList.map(event => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: event.event_id,\n            children: event.name\n          }, event.event_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"starttimepicker\",\n        children: [\"Start time:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          className: \"calLabel\",\n          id: \"starttimepicker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"endtimepicker\",\n        children: [\"End time:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          className: \"calLabel\",\n          id: \"endtimepicker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Delete Event\",\n        className: \"calLabel\",\n        onClick: deleteEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Create New Blob\",\n        className: \"calLabel\",\n        onClick: createBlob\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = BlobAdder;\n\nfunction BlobEditor(_ref5) {\n  _s3();\n\n  let {\n    username,\n    date,\n    updateLists,\n    selectedBlob,\n    setSelectedBlob\n  } = _ref5;\n\n  function editBlob() {\n    const startTimePicker = document.getElementById('starttimepickermodify');\n    const endTimePicker = document.getElementById('endtimepickermodify');\n    const startDateTime = combineDateTimeString(date, startTimePicker.value);\n    const endDateTime = combineDateTimeString(date, endTimePicker.value);\n    startTimePicker.value = '';\n    endTimePicker.value = '';\n    setSelectedBlob(null);\n\n    (async function anon1BlobEditor() {\n      await postCalendarBlobBlobID(selectedBlob.blob_id, selectedBlob.event.event_id, username, startDateTime, endDateTime);\n      updateLists(val => !val);\n    })();\n  }\n\n  function deleteBlob() {\n    const startTimePicker = document.getElementById('starttimepickermodify');\n    const endTimePicker = document.getElementById('endtimepickermodify');\n    startTimePicker.value = '';\n    endTimePicker.value = '';\n    setSelectedBlob(null);\n\n    (async function anonwBlobEditor() {\n      await deleteCalendarBlobBlobID(selectedBlob.blob_id, selectedBlob.event.event_id, username);\n      updateLists(val => !val);\n    })();\n  }\n\n  const prevBlob = useRef(null);\n  const startTimePicker = document.getElementById('starttimepickermodify');\n  const endTimePicker = document.getElementById('endtimepickermodify');\n\n  if (!selectedBlob) {\n    if (startTimePicker) {\n      startTimePicker.value = '';\n    }\n\n    if (endTimePicker) {\n      endTimePicker.value = '';\n    }\n  } else {\n    if (startTimePicker && (!startTimePicker.value || prevBlob.current !== selectedBlob)) {\n      startTimePicker.value = extractTimeString(selectedBlob.time.start);\n    }\n\n    if (endTimePicker && (!endTimePicker.value || prevBlob.current !== selectedBlob)) {\n      endTimePicker.value = extractTimeString(selectedBlob.time.end);\n    }\n  }\n\n  prevBlob.current = selectedBlob; // console.log('BlobEditor rerendered');\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"blobeditor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Event on Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"starttimepickermodify\",\n        children: [\"Start time:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          className: \"calLabel\",\n          id: \"starttimepickermodify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"endtimepickermodify\",\n        children: [\"End time:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          className: \"calLabel\",\n          id: \"endtimepickermodify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Edit Blob Time\",\n      className: \"calLabel\",\n      onClick: editBlob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Delete Blob\",\n      className: \"calLabel\",\n      onClick: deleteBlob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(BlobEditor, \"SVxWo+pgQd6RZpT/qeebR2Uo31c=\");\n\n_c5 = BlobEditor;\n\nfunction DatePicker(_ref6) {\n  let {\n    date,\n    setDate,\n    setSelectedBlob\n  } = _ref6;\n\n  function dateChanged(e) {\n    if (e.target.value) {\n      setSelectedBlob(null);\n      setDate(e.target.value);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    htmlFor: \"datepicker\",\n    children: [\"Choose date:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      id: \"datepicker\",\n      defaultValue: date,\n      onChange: dateChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 5\n  }, this);\n}\n\n_c6 = DatePicker;\nconst calendarWidth = 400;\nconst calendarHeight = 1000;\nconst calendarPadL = 50;\nconst calendarPadR = 10;\nconst calendarPadU = 10;\nconst calendarPadD = 10;\n\nfunction CalendarView(_ref7) {\n  let {\n    blobList,\n    selectedBlob,\n    setSelectedBlob\n  } = _ref7;\n  const hourList = Array.from({\n    length: 24\n  }, (_x, i) => i); // console.log('CalendarView rerendered');\n  // console.log(blobList);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendarview\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: calendarPadL + calendarWidth + calendarPadR,\n      height: calendarPadU + calendarHeight + calendarPadD,\n      children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n        x: calendarPadL,\n        y: calendarPadU,\n        width: calendarWidth,\n        height: calendarHeight,\n        stroke: \"black\",\n        strokeWidth: \"0.4%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), hourList.map(hour => /*#__PURE__*/_jsxDEV(HourBox, {\n        hour: hour\n      }, hour, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 33\n      }, this)), blobList.map(blob => /*#__PURE__*/_jsxDEV(CalendarBlob, {\n        selectedBlob: selectedBlob,\n        setSelectedBlob: setSelectedBlob,\n        blob: blob\n      }, `${blob.event.event_id}_${blob.blob_id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 313,\n    columnNumber: 5\n  }, this);\n}\n\n_c7 = CalendarView;\n\nfunction CalendarBlob(_ref8) {\n  let {\n    blob,\n    selectedBlob,\n    setSelectedBlob\n  } = _ref8;\n  const millisAtMidnight = stringToDateLocal(extractDateString(blob.time.start)).getTime();\n  const millisAtStart = stringToDatetimeLocal(blob.time.start).getTime() - millisAtMidnight;\n  const millisAtEnd = stringToDatetimeLocal(blob.time.end).getTime() - millisAtMidnight;\n  const millisDay = 86400000; // Milliseconds in a day\n\n  const x = calendarPadL;\n  const y = calendarPadU + calendarHeight * millisAtStart / millisDay;\n  const height = calendarHeight * (millisAtEnd - millisAtStart) / millisDay;\n  const width = calendarWidth;\n  const label = blob.event.name; // eslint-disable-next-line prefer-destructuring\n\n  const color = blob.event.color;\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    onClick: () => setSelectedBlob(blob),\n    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      fill: color,\n      stroke: \"black\",\n      strokeWidth: selectedBlob === blob ? '1%' : '0.2%',\n      opacity: \"0.7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: x + width / 2,\n      y: y + height / 3,\n      dominantBaseline: \"middle\",\n      textAnchor: \"middle\",\n      children: [/*#__PURE__*/_jsxDEV(\"tspan\", {\n        textAnchor: \"middle\",\n        x: x + width / 2,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tspan\", {\n        textAnchor: \"middle\",\n        x: x + width / 2,\n        dy: \"1.2em\",\n        children: [extractTimeString(blob.time.start), \"-\", extractTimeString(blob.time.end)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 345,\n    columnNumber: 5\n  }, this);\n}\n\n_c8 = CalendarBlob;\n\nfunction HourBox(_ref9) {\n  let {\n    hour\n  } = _ref9;\n  const height = calendarHeight / 24;\n  const width = calendarWidth;\n  const x = calendarPadL;\n  const y = calendarPadU + hour * height;\n  const color = hour % 2 ? 'white' : '#cccccc';\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      fill: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: 0,\n      y: y + height / 4,\n      dominantBaseline: \"middle\",\n      children: [hour.toString().padStart(2, '0'), \":00\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 383,\n    columnNumber: 5\n  }, this);\n}\n\n_c9 = HourBox;\nexport default Calendar;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"Calendar\");\n$RefreshReg$(_c2, \"CalendarContainer\");\n$RefreshReg$(_c3, \"EventAdder\");\n$RefreshReg$(_c4, \"BlobAdder\");\n$RefreshReg$(_c5, \"BlobEditor\");\n$RefreshReg$(_c6, \"DatePicker\");\n$RefreshReg$(_c7, \"CalendarView\");\n$RefreshReg$(_c8, \"CalendarBlob\");\n$RefreshReg$(_c9, \"HourBox\");","map":{"version":3,"sources":["C:/Users/pojoj/Documents/CIS350APP/naurrrwhalsAppDeployment/naur-app/src/components/Calendar.js"],"names":["React","useRef","useState","FaCalendarAlt","getCalendarEventList","postCalendarEventCreate","deleteCalendarEventEventID","getCalendarBlobList","postCalendarBlobCreate","postCalendarBlobBlobID","deleteCalendarBlobBlobID","dateToStringLocal","combineDateTimeString","extractTimeString","stringToDatetimeLocal","stringToDateLocal","extractDateString","Calendar","username","date","setDate","Date","_updateListValue","updateLists","CalendarContainer","eventListPromise","blobListPromise","eventList","setEventList","then","value","blobList","setBlobList","selectedBlob","setSelectedBlob","EventAdder","createEvent","eventNameInput","document","getElementById","eventColorPicker","eventName","eventColor","anon1BlobAdder","val","BlobAdder","createBlob","eventPicker","startTimePicker","endTimePicker","eventID","startDateTime","endDateTime","deleteEvent","anon2BlobAdder","map","event","event_id","name","BlobEditor","editBlob","anon1BlobEditor","blob_id","deleteBlob","anonwBlobEditor","prevBlob","current","time","start","end","DatePicker","dateChanged","e","target","calendarWidth","calendarHeight","calendarPadL","calendarPadR","calendarPadU","calendarPadD","CalendarView","hourList","Array","from","length","_x","i","hour","blob","CalendarBlob","millisAtMidnight","getTime","millisAtStart","millisAtEnd","millisDay","x","y","height","width","label","color","HourBox","toString","padStart"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport '../assets/Calendar.css';\r\nimport { FaCalendarAlt } from 'react-icons/fa';\r\n\r\nimport {\r\n  getCalendarEventList, postCalendarEventCreate,\r\n  deleteCalendarEventEventID,\r\n  getCalendarBlobList, postCalendarBlobCreate,\r\n  postCalendarBlobBlobID, deleteCalendarBlobBlobID,\r\n} from '../modules/calendarApi';\r\n\r\nimport {\r\n  dateToStringLocal, combineDateTimeString, extractTimeString,\r\n  stringToDatetimeLocal, stringToDateLocal, extractDateString,\r\n} from '../modules/utils';\r\n\r\nfunction Calendar({ username }) {\r\n  const [date, setDate] = useState(dateToStringLocal(new Date()));\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [_updateListValue, updateLists] = useState(0);\r\n\r\n  return (\r\n    <CalendarContainer\r\n      username={username}\r\n      date={date}\r\n      setDate={setDate}\r\n      eventListPromise={getCalendarEventList(username)}\r\n      blobListPromise={getCalendarBlobList(date, username)}\r\n      updateLists={updateLists}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CalendarContainer({\r\n  username, date, setDate, eventListPromise, blobListPromise, updateLists,\r\n}) {\r\n  const [eventList, setEventList] = useState([]);\r\n  eventListPromise.then((value) => { setEventList(value); });\r\n  const [blobList, setBlobList] = useState([]);\r\n  blobListPromise.then((value) => { setBlobList(value); });\r\n\r\n  const [selectedBlob, setSelectedBlob] = useState('');\r\n\r\n  // console.log('CalendarContainer rerendered');\r\n  // console.log('eventList value:');\r\n  // console.log(eventList);\r\n\r\n  return (\r\n    <div id=\"calendar\">\r\n      <div id=\"editBar\">\r\n        <div id=\"topBar\">\r\n          <FaCalendarAlt id=\"top\" />\r\n          { ' ' }\r\n          <DatePicker date={date} setDate={setDate} setSelectedBlob={setSelectedBlob} />\r\n          <br />\r\n        </div>\r\n        <EventAdder username={username} updateLists={updateLists} />\r\n        <br />\r\n        <BlobAdder\r\n          username={username}\r\n          eventList={eventList}\r\n          date={date}\r\n          updateLists={updateLists}\r\n        />\r\n        <br />\r\n      </div>\r\n      <CalendarView\r\n        blobList={blobList}\r\n        selectedBlob={selectedBlob}\r\n        setSelectedBlob={setSelectedBlob}\r\n      />\r\n      <BlobEditor\r\n        username={username}\r\n        date={date}\r\n        selectedBlob={selectedBlob}\r\n        setSelectedBlob={setSelectedBlob}\r\n        updateLists={updateLists}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction EventAdder({ username, updateLists }) {\r\n  function createEvent() {\r\n    const eventNameInput = document.getElementById('eventnameinput');\r\n    const eventColorPicker = document.getElementById('eventcolorpicker');\r\n    const eventName = eventNameInput.value;\r\n    const eventColor = eventColorPicker.value;\r\n    eventNameInput.value = 'Default Event Name';\r\n    eventColorPicker.value = '#888888';\r\n    // eslint-disable-next-line max-len\r\n    (async function anon1BlobAdder() {\r\n      await postCalendarEventCreate(username, eventName, eventColor);\r\n      updateLists((val) => (!val));\r\n    }());\r\n  }\r\n\r\n  // console.log('EventAdder rerendered');\r\n\r\n  return (\r\n    <div id=\"eventadder\">\r\n      <div>\r\n        <h3>Create New Event</h3>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"eventnameinput\">\r\n          Event Name:&nbsp;\r\n          <input type=\"text\" id=\"eventnameinput\" className=\"calLabel\" defaultValue=\"Default Event Name\" />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"eventcolorpicker\">\r\n          Event Color:&nbsp;\r\n          <input type=\"color\" id=\"eventcolorpicker\" className=\"calLabel\" defaultValue=\"#888888\" />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <input type=\"button\" value=\"Create New Event\" className=\"calLabel\" onClick={createEvent} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction BlobAdder({\r\n  username, eventList, updateLists, date,\r\n}) {\r\n  // console.log('BlobAdder rerendered');\r\n  // console.log('eventList value:');\r\n  // console.log(eventList);\r\n\r\n  function createBlob() {\r\n    const eventPicker = document.getElementById('eventpicker');\r\n    const startTimePicker = document.getElementById('starttimepicker');\r\n    const endTimePicker = document.getElementById('endtimepicker');\r\n    const eventID = eventPicker.value;\r\n    const startDateTime = combineDateTimeString(date, startTimePicker.value);\r\n    const endDateTime = combineDateTimeString(date, endTimePicker.value);\r\n    startTimePicker.value = '';\r\n    endTimePicker.value = '';\r\n    (async function anon1BlobAdder() {\r\n      await postCalendarBlobCreate(eventID, username, startDateTime, endDateTime);\r\n      updateLists((val) => (!val));\r\n    }());\r\n  }\r\n\r\n  function deleteEvent() {\r\n    const eventPicker = document.getElementById('eventpicker');\r\n    const eventID = eventPicker.value;\r\n    const startTimePicker = document.getElementById('starttimepicker');\r\n    const endTimePicker = document.getElementById('endtimepicker');\r\n    startTimePicker.value = '';\r\n    endTimePicker.value = '';\r\n    (async function anon2BlobAdder() {\r\n      await deleteCalendarEventEventID(eventID, username);\r\n      updateLists((val) => (!val));\r\n    }());\r\n  }\r\n\r\n  return (\r\n    <div id=\"blobadder\">\r\n      <div>\r\n        <h3>Add Events to Calendar</h3>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"eventpicker\">\r\n          Event:&nbsp;\r\n          <select id=\"eventpicker\" className=\"calLabel\">\r\n            {eventList.map((event) => (\r\n              <option key={event.event_id} value={event.event_id}>{event.name}</option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n      &nbsp;\r\n      <div>\r\n        <label htmlFor=\"starttimepicker\">\r\n          Start time:&nbsp;\r\n          <input type=\"time\" className=\"calLabel\" id=\"starttimepicker\" />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"endtimepicker\">\r\n          End time:&nbsp;\r\n          <input type=\"time\" className=\"calLabel\" id=\"endtimepicker\" />\r\n        </label>\r\n      </div>\r\n      <br />\r\n      <div>\r\n        <input type=\"button\" value=\"Delete Event\" className=\"calLabel\" onClick={deleteEvent} />\r\n        <input type=\"button\" value=\"Create New Blob\" className=\"calLabel\" onClick={createBlob} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction BlobEditor({\r\n  username, date, updateLists, selectedBlob, setSelectedBlob,\r\n}) {\r\n  function editBlob() {\r\n    const startTimePicker = document.getElementById('starttimepickermodify');\r\n    const endTimePicker = document.getElementById('endtimepickermodify');\r\n    const startDateTime = combineDateTimeString(date, startTimePicker.value);\r\n    const endDateTime = combineDateTimeString(date, endTimePicker.value);\r\n    startTimePicker.value = '';\r\n    endTimePicker.value = '';\r\n    setSelectedBlob(null);\r\n    (async function anon1BlobEditor() {\r\n      await postCalendarBlobBlobID(\r\n        selectedBlob.blob_id,\r\n        selectedBlob.event.event_id,\r\n        username,\r\n        startDateTime,\r\n        endDateTime,\r\n      );\r\n      updateLists((val) => (!val));\r\n    }());\r\n  }\r\n\r\n  function deleteBlob() {\r\n    const startTimePicker = document.getElementById('starttimepickermodify');\r\n    const endTimePicker = document.getElementById('endtimepickermodify');\r\n    startTimePicker.value = '';\r\n    endTimePicker.value = '';\r\n    setSelectedBlob(null);\r\n    (async function anonwBlobEditor() {\r\n      await deleteCalendarBlobBlobID(\r\n        selectedBlob.blob_id,\r\n        selectedBlob.event.event_id,\r\n        username,\r\n      );\r\n      updateLists((val) => (!val));\r\n    }());\r\n  }\r\n\r\n  const prevBlob = useRef(null);\r\n\r\n  const startTimePicker = document.getElementById('starttimepickermodify');\r\n  const endTimePicker = document.getElementById('endtimepickermodify');\r\n  if (!selectedBlob) {\r\n    if (startTimePicker) {\r\n      startTimePicker.value = '';\r\n    }\r\n    if (endTimePicker) {\r\n      endTimePicker.value = '';\r\n    }\r\n  } else {\r\n    if (startTimePicker && (!startTimePicker.value || (prevBlob.current !== selectedBlob))) {\r\n      startTimePicker.value = extractTimeString(selectedBlob.time.start);\r\n    }\r\n    if (endTimePicker && (!endTimePicker.value || (prevBlob.current !== selectedBlob))) {\r\n      endTimePicker.value = extractTimeString(selectedBlob.time.end);\r\n    }\r\n  }\r\n\r\n  prevBlob.current = selectedBlob;\r\n\r\n  // console.log('BlobEditor rerendered');\r\n\r\n  return (\r\n    <div id=\"blobeditor\">\r\n      <div>\r\n        <h3>Edit Event on Calendar</h3>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"starttimepickermodify\">\r\n          Start time:&nbsp;\r\n          <input type=\"time\" className=\"calLabel\" id=\"starttimepickermodify\" />\r\n        </label>\r\n      </div>\r\n      &nbsp;\r\n      <div>\r\n        <label htmlFor=\"endtimepickermodify\">\r\n          End time:&nbsp;\r\n          <input type=\"time\" className=\"calLabel\" id=\"endtimepickermodify\" />\r\n        </label>\r\n      </div>\r\n      <br />\r\n      <input type=\"button\" value=\"Edit Blob Time\" className=\"calLabel\" onClick={editBlob} />\r\n      <input type=\"button\" value=\"Delete Blob\" className=\"calLabel\" onClick={deleteBlob} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction DatePicker({ date, setDate, setSelectedBlob }) {\r\n  function dateChanged(e) {\r\n    if (e.target.value) {\r\n      setSelectedBlob(null);\r\n      setDate(e.target.value);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <label htmlFor=\"datepicker\">\r\n      Choose date:&nbsp;\r\n      <input type=\"date\" id=\"datepicker\" defaultValue={date} onChange={dateChanged} />\r\n    </label>\r\n  );\r\n}\r\n\r\nconst calendarWidth = 400;\r\nconst calendarHeight = 1000;\r\nconst calendarPadL = 50;\r\nconst calendarPadR = 10;\r\nconst calendarPadU = 10;\r\nconst calendarPadD = 10;\r\n\r\nfunction CalendarView({ blobList, selectedBlob, setSelectedBlob }) {\r\n  const hourList = Array.from({ length: 24 }, (_x, i) => i);\r\n  // console.log('CalendarView rerendered');\r\n  // console.log(blobList);\r\n  return (\r\n    <div className=\"calendarview\">\r\n      <svg\r\n        width={calendarPadL + calendarWidth + calendarPadR}\r\n        height={calendarPadU + calendarHeight + calendarPadD}\r\n      >\r\n        <rect x={calendarPadL} y={calendarPadU} width={calendarWidth} height={calendarHeight} stroke=\"black\" strokeWidth=\"0.4%\" />\r\n        {hourList.map((hour) => <HourBox key={hour} hour={hour} />)}\r\n        {blobList.map((blob) => (\r\n          <CalendarBlob key={`${blob.event.event_id}_${blob.blob_id}`} selectedBlob={selectedBlob} setSelectedBlob={setSelectedBlob} blob={blob} />\r\n        ))}\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CalendarBlob({ blob, selectedBlob, setSelectedBlob }) {\r\n  const millisAtMidnight = stringToDateLocal(extractDateString(blob.time.start)).getTime();\r\n  const millisAtStart = stringToDatetimeLocal(blob.time.start).getTime() - millisAtMidnight;\r\n  const millisAtEnd = stringToDatetimeLocal(blob.time.end).getTime() - millisAtMidnight;\r\n  const millisDay = 86400000; // Milliseconds in a day\r\n\r\n  const x = calendarPadL;\r\n  const y = calendarPadU + (calendarHeight * millisAtStart) / millisDay;\r\n  const height = (calendarHeight * (millisAtEnd - millisAtStart)) / millisDay;\r\n  const width = calendarWidth;\r\n\r\n  const label = blob.event.name;\r\n\r\n  // eslint-disable-next-line prefer-destructuring\r\n  const color = blob.event.color;\r\n\r\n  return (\r\n    <g onClick={() => (setSelectedBlob(blob))}>\r\n      <rect\r\n        x={x}\r\n        y={y}\r\n        width={width}\r\n        height={height}\r\n        fill={color}\r\n        stroke=\"black\"\r\n        strokeWidth={(selectedBlob === blob) ? '1%' : '0.2%'}\r\n        opacity=\"0.7\"\r\n      />\r\n      <text\r\n        x={x + width / 2}\r\n        y={y + height / 3}\r\n        dominantBaseline=\"middle\"\r\n        textAnchor=\"middle\"\r\n      >\r\n        <tspan textAnchor=\"middle\" x={x + width / 2}>\r\n          {label}\r\n        </tspan>\r\n        <tspan textAnchor=\"middle\" x={x + width / 2} dy=\"1.2em\">\r\n          {extractTimeString(blob.time.start)}\r\n          -\r\n          {extractTimeString(blob.time.end)}\r\n        </tspan>\r\n      </text>\r\n    </g>\r\n  );\r\n}\r\n\r\nfunction HourBox({ hour }) {\r\n  const height = calendarHeight / 24;\r\n  const width = calendarWidth;\r\n  const x = calendarPadL;\r\n  const y = calendarPadU + (hour * height);\r\n  const color = (hour % 2) ? 'white' : '#cccccc';\r\n\r\n  return (\r\n    <g>\r\n      <rect x={x} y={y} width={width} height={height} fill={color} />\r\n      <text x={0} y={y + height / 4} dominantBaseline=\"middle\">\r\n        {hour.toString().padStart(2, '0')}\r\n        :00\r\n      </text>\r\n    </g>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n"]},"metadata":{},"sourceType":"module"}