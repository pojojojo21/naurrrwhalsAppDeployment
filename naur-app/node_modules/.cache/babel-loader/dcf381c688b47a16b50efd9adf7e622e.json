{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pojoj\\\\Documents\\\\CIS350APP\\\\naurrrwhalsAppDeployment\\\\naur-app\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/forbid-prop-types */\n\n/* eslint-disable react/jsx-filename-extension */\n\n/* eslint-disable react/react-in-jsx-scope */\nimport React, { useState, useRef } from 'react';\nimport { postLogin } from '../modules/loginApi';\nimport RegLock from './regLock';\nimport '../assets/Login.css'; // Returns error if the given string is not a valid username\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction usernameError(str) {\n  if (!str.match(/^[A-Za-z0-9_]*$/)) {\n    return 'Username must be made up of letters, numbers, or underscores';\n  }\n\n  if (!str.match(/^[A-Za-z_][A-Za-z0-9_]*$/)) {\n    return 'Username must start with a letter or underscore';\n  }\n\n  if (!str.match(/[A-Za-z0-9]/)) {\n    return 'Username must contain contain at least one letter or number';\n  }\n\n  if (!(str.length >= 3)) {\n    return 'Username must be at least 3 characters long';\n  }\n\n  return '';\n} // Returns error if the given string is not a valid password\n\n\nfunction passwordError(str) {\n  if (!str.match(/^[A-Za-z0-9\\\\!\"#$%&'()*+,\\-./:;<=>?@[\\]^_`{|}~]+$/)) {\n    return 'Password contains illegal character';\n  }\n\n  if (!(str.length >= 6)) {\n    return 'Password must be at least 6 characters long';\n  }\n\n  return '';\n} // Input: a state setter used to set the username of the current user and reload\n\n\nfunction Login(_ref) {\n  _s();\n\n  let {\n    setUsername,\n    setNewUserState\n  } = _ref;\n  const [errorMessage, setErrorMessage] = useState('');\n  const [lockout, setLockout] = useState(false);\n  const lockoutname = useRef('');\n\n  function handleUsernameInput(e) {\n    const name = e.target.value;\n\n    if (name === '') {\n      setErrorMessage('');\n    } else {\n      setErrorMessage(usernameError(name));\n    }\n  }\n\n  function handlePasswordInput(e) {\n    const pword = e.target.value;\n\n    if (pword === '') {\n      setErrorMessage('');\n    } else {\n      setErrorMessage(passwordError(pword));\n    }\n  }\n\n  function handleLogin(e) {\n    e.preventDefault();\n    const name = document.getElementById('username').value;\n    const pword = document.getElementById('password').value;\n    const nameErr = usernameError(name);\n    const pwordErr = passwordError(pword);\n\n    if (nameErr) {\n      setErrorMessage(nameErr);\n      return;\n    }\n\n    if (pwordErr) {\n      setErrorMessage(pwordErr);\n      return;\n    }\n\n    (async function handleLoginAsync() {\n      const status = await postLogin(name, pword);\n      lockoutname.current = name;\n\n      if (status === 401) {\n        setErrorMessage('Password is incorrect');\n        return;\n      }\n\n      if (status === 403) {\n        setErrorMessage('');\n        setLockout(true);\n        return;\n      }\n\n      if (status === 404) {\n        setErrorMessage('User does not exist');\n        return;\n      }\n\n      if (status < 200 || status >= 300) {\n        setErrorMessage('An unknown error occured');\n        return;\n      } // eslint-disable-next-line no-param-reassign\n\n\n      setNewUserState(false);\n      setUsername(name);\n    })(); // after successful login, reset error count to zero\n    // errCount.current = 0;\n\n  }\n\n  function handleRegister() {\n    setNewUserState(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"regLoginWrapper\",\n    children: [lockout && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"regLock\",\n      children: /*#__PURE__*/_jsxDEV(RegLock, {\n        setLockout: setLockout,\n        username: lockoutname.current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), !lockout && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginWelcome\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Breathe,\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"work,\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"play,\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"sleep,\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"repeat.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginInputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lMessage\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"stay well & get productive, all in one place\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: [\"\\xA0\", errorMessage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleLogin,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"lInputs\",\n            type: \"text\",\n            id: \"username\",\n            placeholder: \"username\",\n            onChange: handleUsernameInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"lInputs\",\n            type: \"password\",\n            id: \"password\",\n            placeholder: \"password\",\n            onChange: handlePasswordInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"lButtons\",\n          type: \"submit\",\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"lButtons\",\n          type: \"submit\",\n          onClick: handleRegister,\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"iSTTLcBa3l4pfCITnSUl8JZIWJ0=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/pojoj/Documents/CIS350APP/naurrrwhalsAppDeployment/naur-app/src/components/Login.js"],"names":["React","useState","useRef","postLogin","RegLock","usernameError","str","match","length","passwordError","Login","setUsername","setNewUserState","errorMessage","setErrorMessage","lockout","setLockout","lockoutname","handleUsernameInput","e","name","target","value","handlePasswordInput","pword","handleLogin","preventDefault","document","getElementById","nameErr","pwordErr","handleLoginAsync","status","current","handleRegister"],"mappings":"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","sourcesContent":["/* eslint-disable react/forbid-prop-types */\r\n/* eslint-disable react/jsx-filename-extension */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n\r\nimport React, { useState, useRef } from 'react';\r\n\r\nimport { postLogin } from '../modules/loginApi';\r\nimport RegLock from './regLock';\r\nimport '../assets/Login.css';\r\n\r\n// Returns error if the given string is not a valid username\r\nfunction usernameError(str) {\r\n  if (!str.match(/^[A-Za-z0-9_]*$/)) {\r\n    return 'Username must be made up of letters, numbers, or underscores';\r\n  }\r\n  if (!str.match(/^[A-Za-z_][A-Za-z0-9_]*$/)) {\r\n    return 'Username must start with a letter or underscore';\r\n  }\r\n  if (!str.match(/[A-Za-z0-9]/)) {\r\n    return 'Username must contain contain at least one letter or number';\r\n  }\r\n  if (!(str.length >= 3)) {\r\n    return 'Username must be at least 3 characters long';\r\n  }\r\n  return '';\r\n}\r\n\r\n// Returns error if the given string is not a valid password\r\nfunction passwordError(str) {\r\n  if (!str.match(/^[A-Za-z0-9\\\\!\"#$%&'()*+,\\-./:;<=>?@[\\]^_`{|}~]+$/)) {\r\n    return 'Password contains illegal character';\r\n  }\r\n  if (!(str.length >= 6)) {\r\n    return 'Password must be at least 6 characters long';\r\n  }\r\n  return '';\r\n}\r\n\r\n// Input: a state setter used to set the username of the current user and reload\r\nfunction Login({ setUsername, setNewUserState }) {\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [lockout, setLockout] = useState(false);\r\n  const lockoutname = useRef('');\r\n\r\n  function handleUsernameInput(e) {\r\n    const name = e.target.value;\r\n    if (name === '') {\r\n      setErrorMessage('');\r\n    } else {\r\n      setErrorMessage(usernameError(name));\r\n    }\r\n  }\r\n\r\n  function handlePasswordInput(e) {\r\n    const pword = e.target.value;\r\n    if (pword === '') {\r\n      setErrorMessage('');\r\n    } else {\r\n      setErrorMessage(passwordError(pword));\r\n    }\r\n  }\r\n\r\n  function handleLogin(e) {\r\n    e.preventDefault();\r\n    const name = document.getElementById('username').value;\r\n    const pword = document.getElementById('password').value;\r\n    const nameErr = usernameError(name);\r\n    const pwordErr = passwordError(pword);\r\n    if (nameErr) {\r\n      setErrorMessage(nameErr);\r\n      return;\r\n    }\r\n    if (pwordErr) {\r\n      setErrorMessage(pwordErr);\r\n      return;\r\n    }\r\n\r\n    (async function handleLoginAsync() {\r\n      const status = await postLogin(name, pword);\r\n      lockoutname.current = name;\r\n      if (status === 401) {\r\n        setErrorMessage('Password is incorrect');\r\n        return;\r\n      }\r\n      if (status === 403) {\r\n        setErrorMessage('');\r\n        setLockout(true);\r\n        return;\r\n      }\r\n      if (status === 404) {\r\n        setErrorMessage('User does not exist');\r\n        return;\r\n      }\r\n      if ((status < 200) || (status >= 300)) {\r\n        setErrorMessage('An unknown error occured');\r\n        return;\r\n      }\r\n      // eslint-disable-next-line no-param-reassign\r\n      setNewUserState(false);\r\n      setUsername(name);\r\n    }());\r\n    // after successful login, reset error count to zero\r\n    // errCount.current = 0;\r\n  }\r\n\r\n  function handleRegister() {\r\n    setNewUserState(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"regLoginWrapper\">\r\n      {lockout && (\r\n        <div className=\"regLock\">\r\n          <RegLock setLockout={setLockout} username={lockoutname.current} />\r\n        </div>\r\n      )}\r\n      {!lockout && (\r\n        <div className=\"loginWrapper\">\r\n          <div className=\"loginWelcome\">\r\n            <h1>\r\n              Breathe,\r\n            </h1>\r\n            <h1>\r\n              work,\r\n            </h1>\r\n            <h1>\r\n              play,\r\n            </h1>\r\n            <h1>\r\n              sleep,\r\n            </h1>\r\n            <h1>\r\n              repeat.\r\n            </h1>\r\n          </div>\r\n          <div className=\"loginInputs\">\r\n            <div className=\"lMessage\">\r\n              <p>\r\n                stay well & get productive, all in one place\r\n              </p>\r\n            </div>\r\n            <div className=\"error\">\r\n          &nbsp;\r\n              {errorMessage}\r\n            </div>\r\n            <form onSubmit={handleLogin}>\r\n              <input className=\"lInputs\" type=\"text\" id=\"username\" placeholder=\"username\" onChange={handleUsernameInput} />\r\n              <br />\r\n              <input className=\"lInputs\" type=\"password\" id=\"password\" placeholder=\"password\" onChange={handlePasswordInput} />\r\n            </form>\r\n            <button className=\"lButtons\" type=\"submit\" onClick={handleLogin}>Login</button>\r\n            <button className=\"lButtons\" type=\"submit\" onClick={handleRegister}>Create Account</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}