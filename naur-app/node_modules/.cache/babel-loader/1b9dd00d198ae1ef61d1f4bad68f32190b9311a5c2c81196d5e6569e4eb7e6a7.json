{"ast":null,"code":"import axios from 'axios';\nimport { stringToDatetimeLocal, extractDateString } from './utils';\nimport rootURL from './url';\n\n// GET /calendar/event/list/{user}\nasync function getCalendarEventList(user) {\n  const url = `${rootURL}/calendar/event/list/${user}`;\n  try {\n    const response = await axios.get(url);\n    const rtnArr = Array.isArray(response === null || response === void 0 ? void 0 : response.data) ? response === null || response === void 0 ? void 0 : response.data : [];\n    return rtnArr;\n  } catch (err) {\n    // throw new Error(`Error when calling ${url}`);\n    return [];\n  }\n}\n\n// POST /calendar/event/create/{user}\nasync function postCalendarEventCreate(user, eventName, eventColor) {\n  const url = `${rootURL}/calendar/event/create/${user}`;\n  try {\n    const sendEvent = {\n      color: eventColor,\n      name: eventName\n    };\n    const response = await axios.post(url, sendEvent);\n    const recEvent = response.data;\n    return recEvent;\n  } catch (err) {\n    throw new Error(`Error when calling ${url}`);\n  }\n}\n\n// GET /calendar/event/{event_id}/{user}\nasync function getCalendarEventEventID(eventID, user) {\n  const url = `${rootURL}/calendar/event/${eventID}/${user}`;\n  try {\n    const response = await axios.get(url);\n    const eventObj = response.data;\n    return eventObj;\n  } catch (err) {\n    throw new Error(`Error when calling ${url}`);\n  }\n}\n\n// PUT /calendar/event/{event_id}/{user}\n// Function is called \"post\" for legacy reasons\nasync function postCalendarEventEventID(eventID, user, eventName, eventColor) {\n  const url = `${rootURL}/calendar/event/${eventID}/${user}`;\n  try {\n    const sendEvent = {\n      color: eventColor,\n      name: eventName\n    };\n    const response = await axios.put(url, sendEvent);\n    const recEvent = response.data;\n    return recEvent;\n  } catch (err) {\n    throw new Error(`Error when calling ${url}`);\n  }\n}\n\n// DELETE /calendar/event/{event_id}/{user}\nasync function deleteCalendarEventEventID(eventID, user) {\n  const url = `${rootURL}/calendar/event/${eventID}/${user}`;\n  try {\n    const response = await axios.delete(url);\n    return response.data || response.status;\n  } catch (err) {\n    throw new Error(`Error when calling ${url}`);\n  }\n}\n\n// GET /calendar/blob/list/{date}/{user}\nasync function getCalendarBlobList(date, user) {\n  // console.log(date);\n  const url = `${rootURL}/calendar/blob/list/${extractDateString(date)}/${user}`;\n  try {\n    const response = await axios.get(url);\n    let rtnArr = (response === null || response === void 0 ? void 0 : response.data) || [];\n    // console.log(rtnArr);\n    rtnArr = rtnArr.sort((a, b) => stringToDatetimeLocal(a.time.start).valueOf() - stringToDatetimeLocal(b.time.start).valueOf());\n    return rtnArr;\n  } catch (err) {\n    // throw new Error(`Error when calling ${url}`);\n    // console.log(err);\n    return [];\n  }\n}\n\n// POST /calendar/blob/create/{event_id}/{user}\nasync function postCalendarBlobCreate(eventID, user, startDateTime, endDateTime) {\n  const url = `${rootURL}/calendar/blob/create/${eventID}/${user}`;\n  try {\n    const sendBlob = {\n      time: {\n        start: startDateTime,\n        end: endDateTime\n      }\n    };\n    const response = await axios.post(url, sendBlob);\n    const recBlob = response.data;\n    return recBlob;\n  } catch (err) {\n    throw new Error(`Error when calling ${url}`);\n  }\n}\n\n// GET /calendar/blob/{blob_id}/{event_id}/{user}\nasync function getCalendarBlobBlobID(blobID, eventID, user) {\n  const url = `${rootURL}/calendar/blob/${blobID}/${eventID}/${user}`;\n  try {\n    const response = await axios.get(url);\n    const blobObj = response.data;\n    return blobObj;\n  } catch (err) {\n    throw new Error(`Error when calling ${url}`);\n  }\n}\n\n// PUT /calendar/blob/{blob_id}/{event_id}/{user}\n// Function is called \"post\" for legacy reasons\nasync function postCalendarBlobBlobID(blobID, eventID, user, startDateTime, endDateTime) {\n  const url = `${rootURL}/calendar/blob/${blobID}/${eventID}/${user}`;\n  try {\n    const sendBlob = {\n      time: {\n        start: startDateTime,\n        end: endDateTime\n      }\n    };\n    const response = await axios.put(url, sendBlob);\n    const recBlob = response.data;\n    return recBlob;\n  } catch (err) {\n    throw new Error(`Error when calling ${url}`);\n  }\n}\n\n// DELETE /calendar/blob/{blob_id}/{event_id}/{user}\nasync function deleteCalendarBlobBlobID(blobID, eventID, user) {\n  const url = `${rootURL}/calendar/blob/${blobID}/${eventID}/${user}`;\n  try {\n    const response = await axios.delete(url);\n    return response.data || response.status;\n  } catch (err) {\n    throw new Error(`Error when calling ${url}`);\n  }\n}\nexport { getCalendarEventList, postCalendarEventCreate, getCalendarEventEventID, postCalendarEventEventID, deleteCalendarEventEventID, getCalendarBlobList, postCalendarBlobCreate, getCalendarBlobBlobID, postCalendarBlobBlobID, deleteCalendarBlobBlobID };","map":{"version":3,"names":["axios","stringToDatetimeLocal","extractDateString","rootURL","getCalendarEventList","user","url","response","get","rtnArr","Array","isArray","data","err","postCalendarEventCreate","eventName","eventColor","sendEvent","color","name","post","recEvent","Error","getCalendarEventEventID","eventID","eventObj","postCalendarEventEventID","put","deleteCalendarEventEventID","delete","status","getCalendarBlobList","date","sort","a","b","time","start","valueOf","postCalendarBlobCreate","startDateTime","endDateTime","sendBlob","end","recBlob","getCalendarBlobBlobID","blobID","blobObj","postCalendarBlobBlobID","deleteCalendarBlobBlobID"],"sources":["C:/Users/pojoj/Documents/CIS350APP/naurrrwhalsAppDeployment/naur-app/src/modules/calendarApi.js"],"sourcesContent":["import axios from 'axios';\r\nimport { stringToDatetimeLocal, extractDateString } from './utils';\r\n\r\nimport rootURL from './url';\r\n\r\n// GET /calendar/event/list/{user}\r\nasync function getCalendarEventList(user) {\r\n  const url = `${rootURL}/calendar/event/list/${user}`;\r\n  try {\r\n    const response = await axios.get(url);\r\n    const rtnArr = Array.isArray(response?.data) ? response?.data : [];\r\n    return rtnArr;\r\n  } catch (err) {\r\n    // throw new Error(`Error when calling ${url}`);\r\n    return [];\r\n  }\r\n}\r\n\r\n// POST /calendar/event/create/{user}\r\nasync function postCalendarEventCreate(user, eventName, eventColor) {\r\n  const url = `${rootURL}/calendar/event/create/${user}`;\r\n  try {\r\n    const sendEvent = { color: eventColor, name: eventName };\r\n    const response = await axios.post(url, sendEvent);\r\n    const recEvent = response.data;\r\n    return recEvent;\r\n  } catch (err) {\r\n    throw new Error(`Error when calling ${url}`);\r\n  }\r\n}\r\n\r\n// GET /calendar/event/{event_id}/{user}\r\nasync function getCalendarEventEventID(eventID, user) {\r\n  const url = `${rootURL}/calendar/event/${eventID}/${user}`;\r\n  try {\r\n    const response = await axios.get(url);\r\n    const eventObj = response.data;\r\n    return eventObj;\r\n  } catch (err) {\r\n    throw new Error(`Error when calling ${url}`);\r\n  }\r\n}\r\n\r\n// PUT /calendar/event/{event_id}/{user}\r\n// Function is called \"post\" for legacy reasons\r\nasync function postCalendarEventEventID(eventID, user, eventName, eventColor) {\r\n  const url = `${rootURL}/calendar/event/${eventID}/${user}`;\r\n  try {\r\n    const sendEvent = { color: eventColor, name: eventName };\r\n    const response = await axios.put(url, sendEvent);\r\n    const recEvent = response.data;\r\n    return recEvent;\r\n  } catch (err) {\r\n    throw new Error(`Error when calling ${url}`);\r\n  }\r\n}\r\n\r\n// DELETE /calendar/event/{event_id}/{user}\r\nasync function deleteCalendarEventEventID(eventID, user) {\r\n  const url = `${rootURL}/calendar/event/${eventID}/${user}`;\r\n  try {\r\n    const response = await axios.delete(url);\r\n    return response.data || response.status;\r\n  } catch (err) {\r\n    throw new Error(`Error when calling ${url}`);\r\n  }\r\n}\r\n\r\n// GET /calendar/blob/list/{date}/{user}\r\nasync function getCalendarBlobList(date, user) {\r\n  // console.log(date);\r\n  const url = `${rootURL}/calendar/blob/list/${extractDateString(date)}/${user}`;\r\n  try {\r\n    const response = await axios.get(url);\r\n    let rtnArr = response?.data || [];\r\n    // console.log(rtnArr);\r\n    rtnArr = rtnArr.sort((a, b) => (\r\n      stringToDatetimeLocal(a.time.start).valueOf()\r\n      - stringToDatetimeLocal(b.time.start).valueOf()\r\n    ));\r\n    return rtnArr;\r\n  } catch (err) {\r\n    // throw new Error(`Error when calling ${url}`);\r\n    // console.log(err);\r\n    return [];\r\n  }\r\n}\r\n\r\n// POST /calendar/blob/create/{event_id}/{user}\r\nasync function postCalendarBlobCreate(eventID, user, startDateTime, endDateTime) {\r\n  const url = `${rootURL}/calendar/blob/create/${eventID}/${user}`;\r\n  try {\r\n    const sendBlob = { time: { start: startDateTime, end: endDateTime } };\r\n    const response = await axios.post(url, sendBlob);\r\n    const recBlob = response.data;\r\n    return recBlob;\r\n  } catch (err) {\r\n    throw new Error(`Error when calling ${url}`);\r\n  }\r\n}\r\n\r\n// GET /calendar/blob/{blob_id}/{event_id}/{user}\r\nasync function getCalendarBlobBlobID(blobID, eventID, user) {\r\n  const url = `${rootURL}/calendar/blob/${blobID}/${eventID}/${user}`;\r\n  try {\r\n    const response = await axios.get(url);\r\n    const blobObj = response.data;\r\n    return blobObj;\r\n  } catch (err) {\r\n    throw new Error(`Error when calling ${url}`);\r\n  }\r\n}\r\n\r\n// PUT /calendar/blob/{blob_id}/{event_id}/{user}\r\n// Function is called \"post\" for legacy reasons\r\nasync function postCalendarBlobBlobID(blobID, eventID, user, startDateTime, endDateTime) {\r\n  const url = `${rootURL}/calendar/blob/${blobID}/${eventID}/${user}`;\r\n  try {\r\n    const sendBlob = { time: { start: startDateTime, end: endDateTime } };\r\n    const response = await axios.put(url, sendBlob);\r\n    const recBlob = response.data;\r\n    return recBlob;\r\n  } catch (err) {\r\n    throw new Error(`Error when calling ${url}`);\r\n  }\r\n}\r\n\r\n// DELETE /calendar/blob/{blob_id}/{event_id}/{user}\r\nasync function deleteCalendarBlobBlobID(blobID, eventID, user) {\r\n  const url = `${rootURL}/calendar/blob/${blobID}/${eventID}/${user}`;\r\n  try {\r\n    const response = await axios.delete(url);\r\n    return response.data || response.status;\r\n  } catch (err) {\r\n    throw new Error(`Error when calling ${url}`);\r\n  }\r\n}\r\n\r\nexport {\r\n  getCalendarEventList, postCalendarEventCreate,\r\n  getCalendarEventEventID, postCalendarEventEventID,\r\n  deleteCalendarEventEventID, getCalendarBlobList,\r\n  postCalendarBlobCreate, getCalendarBlobBlobID,\r\n  postCalendarBlobBlobID, deleteCalendarBlobBlobID,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}