{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pojoj\\\\Documents\\\\CIS350APP\\\\naurrrwhalsAppDeployment\\\\naur-app\\\\src\\\\components\\\\AddFriendDisplay.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { getUserExists, getFriendExists, getPendingExists, sendFriendRequest } from '../modules/messageApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddFriendDisplay(_ref) {\n  _s();\n\n  let {\n    username\n  } = _ref;\n  const [pressedAdd, setPressedAdd] = useState(false);\n  const [isUser, setIsUser] = useState(false);\n  const [sentRequest, setSentRequest] = useState(false);\n  const [alreadyExists, setAlreadyExists] = useState(false);\n  const [isSelf, setIsSelf] = useState(false);\n  const friendName = useRef(undefined);\n\n  function handleInputName(e) {\n    e.preventDefault();\n    friendName.current = e.target.value;\n    setPressedAdd(false);\n    setIsUser(false);\n    setSentRequest(false);\n    setIsSelf(false);\n    setAlreadyExists(false);\n  }\n\n  function handleSendRequest() {\n    setPressedAdd(true);\n\n    if (friendName.current === username) {\n      setIsSelf(true);\n      return;\n    }\n\n    getFriendExists(username, friendName.current).then(friendValue => {\n      if (friendValue) {\n        setAlreadyExists(true);\n        return;\n      }\n\n      getPendingExists(username, friendName.current).then(pendingValue => {\n        if (pendingValue) {\n          setAlreadyExists(true);\n          return;\n        }\n\n        getUserExists(friendName.current).then(userValue => {\n          if (!userValue) {\n            return;\n          }\n\n          setIsUser(true);\n          sendFriendRequest(username, friendName.current).then(() => {\n            setSentRequest(true);\n          });\n        });\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Add Friend\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"enterName\",\n        placeholder: \"Enter name\",\n        onChange: handleInputName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"sendbtn\",\n      onClick: handleSendRequest,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), pressedAdd && !isUser && !isSelf && !alreadyExists && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Inexistent user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this), sentRequest && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Sent Friend Request\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 24\n    }, this), isSelf && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cannot send request to self\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }, this), alreadyExists && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Already sent request\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddFriendDisplay, \"ze1vMJ4l4VAqsnnsIY7iNwQsj1A=\");\n\n_c = AddFriendDisplay;\nAddFriendDisplay.propTypes = {\n  username: PropTypes.string.isRequired\n};\nexport default AddFriendDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddFriendDisplay\");","map":{"version":3,"sources":["C:/Users/pojoj/Documents/CIS350APP/naurrrwhalsAppDeployment/naur-app/src/components/AddFriendDisplay.js"],"names":["React","useState","useRef","PropTypes","getUserExists","getFriendExists","getPendingExists","sendFriendRequest","AddFriendDisplay","username","pressedAdd","setPressedAdd","isUser","setIsUser","sentRequest","setSentRequest","alreadyExists","setAlreadyExists","isSelf","setIsSelf","friendName","undefined","handleInputName","e","preventDefault","current","target","value","handleSendRequest","then","friendValue","pendingValue","userValue","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import {\r\n  React, useState, useRef,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  getUserExists, getFriendExists, getPendingExists, sendFriendRequest,\r\n} from '../modules/messageApi';\r\n\r\nfunction AddFriendDisplay({ username }) {\r\n  const [pressedAdd, setPressedAdd] = useState(false);\r\n  const [isUser, setIsUser] = useState(false);\r\n  const [sentRequest, setSentRequest] = useState(false);\r\n  const [alreadyExists, setAlreadyExists] = useState(false);\r\n  const [isSelf, setIsSelf] = useState(false);\r\n\r\n  const friendName = useRef(undefined);\r\n\r\n  function handleInputName(e) {\r\n    e.preventDefault();\r\n    friendName.current = e.target.value;\r\n    setPressedAdd(false);\r\n    setIsUser(false);\r\n    setSentRequest(false);\r\n    setIsSelf(false);\r\n    setAlreadyExists(false);\r\n  }\r\n\r\n  function handleSendRequest() {\r\n    setPressedAdd(true);\r\n    if (friendName.current === username) {\r\n      setIsSelf(true);\r\n      return;\r\n    }\r\n    getFriendExists(username, friendName.current).then((friendValue) => {\r\n      if (friendValue) {\r\n        setAlreadyExists(true);\r\n        return;\r\n      }\r\n      getPendingExists(username, friendName.current).then((pendingValue) => {\r\n        if (pendingValue) {\r\n          setAlreadyExists(true);\r\n          return;\r\n        }\r\n        getUserExists(friendName.current).then((userValue) => {\r\n          if (!userValue) {\r\n            return;\r\n          }\r\n          setIsUser(true);\r\n          sendFriendRequest(username, friendName.current).then(() => {\r\n            setSentRequest(true);\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      Add Friend\r\n      <div><input type=\"text\" id=\"enterName\" placeholder=\"Enter name\" onChange={handleInputName} /></div>\r\n      <button type=\"button\" className=\"sendbtn\" onClick={handleSendRequest}>Send</button>\r\n      {pressedAdd && !isUser && !isSelf && !alreadyExists\r\n      && (<div>Inexistent user</div>)}\r\n      {sentRequest && (<div>Sent Friend Request</div>)}\r\n      {isSelf && (<div>Cannot send request to self</div>)}\r\n      {alreadyExists && (<div>Already sent request</div>)}\r\n    </div>\r\n  );\r\n}\r\nAddFriendDisplay.propTypes = {\r\n  username: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default AddFriendDisplay;\r\n"]},"metadata":{},"sourceType":"module"}