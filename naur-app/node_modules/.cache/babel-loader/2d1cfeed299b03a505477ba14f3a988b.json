{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pojoj\\\\Documents\\\\CIS350APP\\\\naurrrwhalsAppDeployment\\\\naur-app\\\\src\\\\components\\\\SendMessageBox.js\",\n    _s = $RefreshSig$();\n\nimport { React, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getMessageLog, putMessageLog } from '../modules/messageApi';\nimport PopUp from './PopUp';\nimport SendMediaDisplay from './SendMediaDisplay'; // eslint-disable-next-line no-unused-vars\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SendMessageBox(_ref) {\n  _s();\n\n  let {\n    username,\n    friendName,\n    setMessageLog\n  } = _ref;\n  const [isInSendMediaPopUp, setMediaPopUp] = useState(false);\n  const message = useRef(undefined);\n\n  const sendMessage = (sender, receiver, msg) => {\n    if (msg === undefined) {\n      return;\n    }\n\n    putMessageLog(sender, receiver, msg).then(() => {\n      getMessageLog(sender, receiver).then(log => {\n        setMessageLog(log);\n      });\n    });\n  };\n\n  function handleWriteMsg(e) {\n    message.current = {\n      msgText: e.target.value\n    };\n  }\n\n  function handleSendMsg() {\n    if (message.current === undefined || message.current.msgText === undefined || message.current.msgText === '') {\n      return;\n    }\n\n    sendMessage(username, friendName, message.current);\n    document.getElementById('enterMessage').value = ''; // printUsers();\n  }\n\n  function handlePressMedia() {\n    setMediaPopUp(true);\n  }\n\n  const handleCloseMedia = () => {\n    setMediaPopUp(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"messagebox\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"enterMessage\",\n      placeholder: \"Message\",\n      onChange: handleWriteMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"removebtn\",\n      onClick: handleSendMsg,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"removebtn\",\n      onClick: handlePressMedia,\n      children: \"Media\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), isInSendMediaPopUp && /*#__PURE__*/_jsxDEV(PopUp, {\n      content: /*#__PURE__*/_jsxDEV(SendMediaDisplay, {\n        sender: username,\n        receiver: friendName,\n        sendMessage: sendMessage,\n        handleClose: handleCloseMedia\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this),\n      handleClose: handleCloseMedia,\n      closetext: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SendMessageBox, \"RsIBTEAcdrh+DM3x+R6Z4mAmAlE=\");\n\n_c = SendMessageBox;\nSendMessageBox.propTypes = {\n  username: PropTypes.string.isRequired,\n  friendName: PropTypes.string.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  setMessageLog: PropTypes.func.isRequired\n};\nexport default SendMessageBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendMessageBox\");","map":{"version":3,"sources":["C:/Users/pojoj/Documents/CIS350APP/naurrrwhalsAppDeployment/naur-app/src/components/SendMessageBox.js"],"names":["React","useRef","useState","PropTypes","getMessageLog","putMessageLog","PopUp","SendMediaDisplay","SendMessageBox","username","friendName","setMessageLog","isInSendMediaPopUp","setMediaPopUp","message","undefined","sendMessage","sender","receiver","msg","then","log","handleWriteMsg","e","current","msgText","target","value","handleSendMsg","document","getElementById","handlePressMedia","handleCloseMedia","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["import { React, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getMessageLog, putMessageLog } from '../modules/messageApi';\r\nimport PopUp from './PopUp';\r\nimport SendMediaDisplay from './SendMediaDisplay';\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nfunction SendMessageBox({ username, friendName, setMessageLog }) {\r\n  const [isInSendMediaPopUp, setMediaPopUp] = useState(false);\r\n  const message = useRef(undefined);\r\n\r\n  const sendMessage = (sender, receiver, msg) => {\r\n    if (msg === undefined) {\r\n      return;\r\n    }\r\n    putMessageLog(sender, receiver, msg).then(() => {\r\n      getMessageLog(sender, receiver).then((log) => {\r\n        setMessageLog(log);\r\n      });\r\n    });\r\n  };\r\n\r\n  function handleWriteMsg(e) {\r\n    message.current = { msgText: e.target.value };\r\n  }\r\n  function handleSendMsg() {\r\n    if (message.current === undefined\r\n     || message.current.msgText === undefined\r\n     || message.current.msgText === '') {\r\n      return;\r\n    }\r\n    sendMessage(username, friendName, message.current);\r\n    document.getElementById('enterMessage').value = '';\r\n    // printUsers();\r\n  }\r\n\r\n  function handlePressMedia() {\r\n    setMediaPopUp(true);\r\n  }\r\n\r\n  const handleCloseMedia = () => {\r\n    setMediaPopUp(false);\r\n  };\r\n\r\n  return (\r\n    <div id=\"messagebox\">\r\n      <input type=\"text\" id=\"enterMessage\" placeholder=\"Message\" onChange={handleWriteMsg} />\r\n      <button type=\"button\" className=\"removebtn\" onClick={handleSendMsg}>Send</button>\r\n      <button type=\"button\" className=\"removebtn\" onClick={handlePressMedia}>Media</button>\r\n      {isInSendMediaPopUp && (\r\n      <PopUp\r\n        content={(\r\n          <SendMediaDisplay\r\n            sender={username}\r\n            receiver={friendName}\r\n            sendMessage={sendMessage}\r\n            handleClose={handleCloseMedia}\r\n          />\r\n        )}\r\n        handleClose={handleCloseMedia}\r\n        closetext=\"Cancel\"\r\n      />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nSendMessageBox.propTypes = {\r\n  username: PropTypes.string.isRequired,\r\n  friendName: PropTypes.string.isRequired,\r\n  // eslint-disable-next-line react/forbid-prop-types\r\n  setMessageLog: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SendMessageBox;\r\n"]},"metadata":{},"sourceType":"module"}