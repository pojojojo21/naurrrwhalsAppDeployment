{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pojoj\\\\Documents\\\\CIS350APP\\\\naurrrwhalsAppDeployment\\\\naur-app\\\\src\\\\components\\\\Calendar.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport '../assets/Calendar.css';\nimport { FaCalendarAlt } from 'react-icons/fa';\nimport { getCalendarEventList, postCalendarEventCreate, deleteCalendarEventEventID, getCalendarBlobList, postCalendarBlobCreate, postCalendarBlobBlobID, deleteCalendarBlobBlobID } from '../modules/calendarApi';\nimport { dateToStringLocal, combineDateTimeString, extractTimeString, stringToDatetimeLocal, stringToDateLocal, extractDateString } from '../modules/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendar(_ref) {\n  _s();\n  let {\n    username\n  } = _ref;\n  const [date, setDate] = useState(dateToStringLocal(new Date()));\n\n  // eslint-disable-next-line no-unused-vars\n  const [_updateListValue, updateLists] = useState(0);\n  return /*#__PURE__*/_jsxDEV(CalendarContainer, {\n    username: username,\n    date: date,\n    setDate: setDate,\n    eventListPromise: getCalendarEventList(username),\n    blobListPromise: getCalendarBlobList(date, username),\n    updateLists: updateLists\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendar, \"TiYzL/pSJpgRjnJcDp1pHelDSLA=\");\n_c = Calendar;\nfunction CalendarContainer(_ref2) {\n  _s2();\n  let {\n    username,\n    date,\n    setDate,\n    eventListPromise,\n    blobListPromise,\n    updateLists\n  } = _ref2;\n  const [eventList, setEventList] = useState([]);\n  eventListPromise.then(value => {\n    setEventList(value);\n  });\n  const [blobList, setBlobList] = useState([]);\n  blobListPromise.then(value => {\n    setBlobList(value);\n  });\n  const [selectedBlob, setSelectedBlob] = useState('');\n\n  // console.log('CalendarContainer rerendered');\n  // console.log('eventList value:');\n  // console.log(eventList);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"editBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"topBar\",\n        children: [/*#__PURE__*/_jsxDEV(FaCalendarAlt, {\n          id: \"top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(DatePicker, {\n          date: date,\n          setDate: setDate,\n          setSelectedBlob: setSelectedBlob\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EventAdder, {\n        username: username,\n        updateLists: updateLists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BlobAdder, {\n        username: username,\n        eventList: eventList,\n        date: date,\n        updateLists: updateLists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalendarView, {\n      blobList: blobList,\n      selectedBlob: selectedBlob,\n      setSelectedBlob: setSelectedBlob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BlobEditor, {\n      username: username,\n      date: date,\n      selectedBlob: selectedBlob,\n      setSelectedBlob: setSelectedBlob,\n      updateLists: updateLists\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s2(CalendarContainer, \"H1W+aR0lfMPMMh62xw1auufbZ9U=\");\n_c2 = CalendarContainer;\nfunction EventAdder(_ref3) {\n  let {\n    username,\n    updateLists\n  } = _ref3;\n  function createEvent() {\n    const eventNameInput = document.getElementById('eventnameinput');\n    const eventColorPicker = document.getElementById('eventcolorpicker');\n    const eventName = eventNameInput.value;\n    const eventColor = eventColorPicker.value;\n    eventNameInput.value = 'Default Event Name';\n    eventColorPicker.value = '#888888';\n    // eslint-disable-next-line max-len\n    (async function anon1BlobAdder() {\n      await postCalendarEventCreate(username, eventName, eventColor);\n      updateLists(val => !val);\n    })();\n  }\n\n  // console.log('EventAdder rerendered');\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"eventadder\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"eventnameinput\",\n        children: [\"Event Name:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"eventnameinput\",\n          className: \"calLabel\",\n          defaultValue: \"Default Event Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"eventcolorpicker\",\n        children: [\"Event Color:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          id: \"eventcolorpicker\",\n          className: \"calLabel\",\n          defaultValue: \"#888888\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Create New Event\",\n        className: \"calLabel\",\n        onClick: createEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_c3 = EventAdder;\nfunction BlobAdder(_ref4) {\n  let {\n    username,\n    eventList,\n    updateLists,\n    date\n  } = _ref4;\n  // console.log('BlobAdder rerendered');\n  // console.log('eventList value:');\n  // console.log(eventList);\n\n  function createBlob() {\n    const eventPicker = document.getElementById('eventpicker');\n    const startTimePicker = document.getElementById('starttimepicker');\n    const endTimePicker = document.getElementById('endtimepicker');\n    const eventID = eventPicker.value;\n    const startDateTime = combineDateTimeString(date, startTimePicker.value);\n    const endDateTime = combineDateTimeString(date, endTimePicker.value);\n    startTimePicker.value = '';\n    endTimePicker.value = '';\n    (async function anon1BlobAdder() {\n      await postCalendarBlobCreate(eventID, username, startDateTime, endDateTime);\n      updateLists(val => !val);\n    })();\n  }\n  function deleteEvent() {\n    const eventPicker = document.getElementById('eventpicker');\n    const eventID = eventPicker.value;\n    const startTimePicker = document.getElementById('starttimepicker');\n    const endTimePicker = document.getElementById('endtimepicker');\n    startTimePicker.value = '';\n    endTimePicker.value = '';\n    (async function anon2BlobAdder() {\n      await deleteCalendarEventEventID(eventID, username);\n      updateLists(val => !val);\n    })();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"blobadder\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Events to Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"eventpicker\",\n        children: [\"Event:\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"eventpicker\",\n          className: \"calLabel\",\n          children: eventList.map(event => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: event.event_id,\n            children: event.name\n          }, event.event_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"starttimepicker\",\n        children: [\"Start time:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          className: \"calLabel\",\n          id: \"starttimepicker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"endtimepicker\",\n        children: [\"End time:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          className: \"calLabel\",\n          id: \"endtimepicker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Delete Event\",\n        className: \"calLabel\",\n        onClick: deleteEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Create New Blob\",\n        className: \"calLabel\",\n        onClick: createBlob\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n_c4 = BlobAdder;\nfunction BlobEditor(_ref5) {\n  _s3();\n  let {\n    username,\n    date,\n    updateLists,\n    selectedBlob,\n    setSelectedBlob\n  } = _ref5;\n  function editBlob() {\n    const startTimePicker = document.getElementById('starttimepickermodify');\n    const endTimePicker = document.getElementById('endtimepickermodify');\n    const startDateTime = combineDateTimeString(date, startTimePicker.value);\n    const endDateTime = combineDateTimeString(date, endTimePicker.value);\n    startTimePicker.value = '';\n    endTimePicker.value = '';\n    setSelectedBlob(null);\n    (async function anon1BlobEditor() {\n      await postCalendarBlobBlobID(selectedBlob.blob_id, selectedBlob.event.event_id, username, startDateTime, endDateTime);\n      updateLists(val => !val);\n    })();\n  }\n  function deleteBlob() {\n    const startTimePicker = document.getElementById('starttimepickermodify');\n    const endTimePicker = document.getElementById('endtimepickermodify');\n    startTimePicker.value = '';\n    endTimePicker.value = '';\n    setSelectedBlob(null);\n    (async function anonwBlobEditor() {\n      await deleteCalendarBlobBlobID(selectedBlob.blob_id, selectedBlob.event.event_id, username);\n      updateLists(val => !val);\n    })();\n  }\n  const prevBlob = useRef(null);\n  const startTimePicker = document.getElementById('starttimepickermodify');\n  const endTimePicker = document.getElementById('endtimepickermodify');\n  if (!selectedBlob) {\n    if (startTimePicker) {\n      startTimePicker.value = '';\n    }\n    if (endTimePicker) {\n      endTimePicker.value = '';\n    }\n  } else {\n    if (startTimePicker && (!startTimePicker.value || prevBlob.current !== selectedBlob)) {\n      startTimePicker.value = extractTimeString(selectedBlob.time.start);\n    }\n    if (endTimePicker && (!endTimePicker.value || prevBlob.current !== selectedBlob)) {\n      endTimePicker.value = extractTimeString(selectedBlob.time.end);\n    }\n  }\n  prevBlob.current = selectedBlob;\n\n  // console.log('BlobEditor rerendered');\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"blobeditor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Event on Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"starttimepickermodify\",\n        children: [\"Start time:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          className: \"calLabel\",\n          id: \"starttimepickermodify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"endtimepickermodify\",\n        children: [\"End time:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          className: \"calLabel\",\n          id: \"endtimepickermodify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Edit Blob Time\",\n      className: \"calLabel\",\n      onClick: editBlob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Delete Blob\",\n      className: \"calLabel\",\n      onClick: deleteBlob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n}\n_s3(BlobEditor, \"SVxWo+pgQd6RZpT/qeebR2Uo31c=\");\n_c5 = BlobEditor;\nfunction DatePicker(_ref6) {\n  let {\n    date,\n    setDate,\n    setSelectedBlob\n  } = _ref6;\n  function dateChanged(e) {\n    if (e.target.value) {\n      setSelectedBlob(null);\n      setDate(e.target.value);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    htmlFor: \"datepicker\",\n    children: [\"Choose date:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      id: \"datepicker\",\n      defaultValue: date,\n      onChange: dateChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 5\n  }, this);\n}\n_c6 = DatePicker;\nconst calendarWidth = 400;\nconst calendarHeight = 1000;\nconst calendarPadL = 50;\nconst calendarPadR = 10;\nconst calendarPadU = 10;\nconst calendarPadD = 10;\nfunction CalendarView(_ref7) {\n  let {\n    blobList,\n    selectedBlob,\n    setSelectedBlob\n  } = _ref7;\n  const hourList = Array.from({\n    length: 24\n  }, (_x, i) => i);\n  // console.log('CalendarView rerendered');\n  // console.log(blobList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendarview\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: calendarPadL + calendarWidth + calendarPadR,\n      height: calendarPadU + calendarHeight + calendarPadD,\n      children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n        x: calendarPadL,\n        y: calendarPadU,\n        width: calendarWidth,\n        height: calendarHeight,\n        stroke: \"black\",\n        strokeWidth: \"0.4%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), hourList.map(hour => /*#__PURE__*/_jsxDEV(HourBox, {\n        hour: hour\n      }, hour, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 33\n      }, this)), blobList.map(blob => /*#__PURE__*/_jsxDEV(CalendarBlob, {\n        selectedBlob: selectedBlob,\n        setSelectedBlob: setSelectedBlob,\n        blob: blob\n      }, `${blob.event.event_id}_${blob.blob_id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 313,\n    columnNumber: 5\n  }, this);\n}\n_c7 = CalendarView;\nfunction CalendarBlob(_ref8) {\n  let {\n    blob,\n    selectedBlob,\n    setSelectedBlob\n  } = _ref8;\n  const millisAtMidnight = stringToDateLocal(extractDateString(blob.time.start)).getTime();\n  const millisAtStart = stringToDatetimeLocal(blob.time.start).getTime() - millisAtMidnight;\n  const millisAtEnd = stringToDatetimeLocal(blob.time.end).getTime() - millisAtMidnight;\n  const millisDay = 86400000; // Milliseconds in a day\n\n  const x = calendarPadL;\n  const y = calendarPadU + calendarHeight * millisAtStart / millisDay;\n  const height = calendarHeight * (millisAtEnd - millisAtStart) / millisDay;\n  const width = calendarWidth;\n  const label = blob.event.name;\n\n  // eslint-disable-next-line prefer-destructuring\n  const color = blob.event.color;\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    onClick: () => setSelectedBlob(blob),\n    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      fill: color,\n      stroke: \"black\",\n      strokeWidth: selectedBlob === blob ? '1%' : '0.2%',\n      opacity: \"0.7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: x + width / 2,\n      y: y + height / 3,\n      dominantBaseline: \"middle\",\n      textAnchor: \"middle\",\n      children: [/*#__PURE__*/_jsxDEV(\"tspan\", {\n        textAnchor: \"middle\",\n        x: x + width / 2,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tspan\", {\n        textAnchor: \"middle\",\n        x: x + width / 2,\n        dy: \"1.2em\",\n        children: [extractTimeString(blob.time.start), \"-\", extractTimeString(blob.time.end)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 345,\n    columnNumber: 5\n  }, this);\n}\n_c8 = CalendarBlob;\nfunction HourBox(_ref9) {\n  let {\n    hour\n  } = _ref9;\n  const height = calendarHeight / 24;\n  const width = calendarWidth;\n  const x = calendarPadL;\n  const y = calendarPadU + hour * height;\n  const color = hour % 2 ? 'white' : '#cccccc';\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      fill: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: 0,\n      y: y + height / 4,\n      dominantBaseline: \"middle\",\n      children: [hour.toString().padStart(2, '0'), \":00\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 383,\n    columnNumber: 5\n  }, this);\n}\n_c9 = HourBox;\nexport default Calendar;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"Calendar\");\n$RefreshReg$(_c2, \"CalendarContainer\");\n$RefreshReg$(_c3, \"EventAdder\");\n$RefreshReg$(_c4, \"BlobAdder\");\n$RefreshReg$(_c5, \"BlobEditor\");\n$RefreshReg$(_c6, \"DatePicker\");\n$RefreshReg$(_c7, \"CalendarView\");\n$RefreshReg$(_c8, \"CalendarBlob\");\n$RefreshReg$(_c9, \"HourBox\");","map":{"version":3,"names":["React","useRef","useState","FaCalendarAlt","getCalendarEventList","postCalendarEventCreate","deleteCalendarEventEventID","getCalendarBlobList","postCalendarBlobCreate","postCalendarBlobBlobID","deleteCalendarBlobBlobID","dateToStringLocal","combineDateTimeString","extractTimeString","stringToDatetimeLocal","stringToDateLocal","extractDateString","Calendar","username","date","setDate","Date","_updateListValue","updateLists","CalendarContainer","eventListPromise","blobListPromise","eventList","setEventList","then","value","blobList","setBlobList","selectedBlob","setSelectedBlob","EventAdder","createEvent","eventNameInput","document","getElementById","eventColorPicker","eventName","eventColor","anon1BlobAdder","val","BlobAdder","createBlob","eventPicker","startTimePicker","endTimePicker","eventID","startDateTime","endDateTime","deleteEvent","anon2BlobAdder","map","event","event_id","name","BlobEditor","editBlob","anon1BlobEditor","blob_id","deleteBlob","anonwBlobEditor","prevBlob","current","time","start","end","DatePicker","dateChanged","e","target","calendarWidth","calendarHeight","calendarPadL","calendarPadR","calendarPadU","calendarPadD","CalendarView","hourList","Array","from","length","_x","i","hour","blob","CalendarBlob","millisAtMidnight","getTime","millisAtStart","millisAtEnd","millisDay","x","y","height","width","label","color","HourBox","toString","padStart"],"sources":["C:/Users/pojoj/Documents/CIS350APP/naurrrwhalsAppDeployment/naur-app/src/components/Calendar.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport '../assets/Calendar.css';\r\nimport { FaCalendarAlt } from 'react-icons/fa';\r\n\r\nimport {\r\n  getCalendarEventList, postCalendarEventCreate,\r\n  deleteCalendarEventEventID,\r\n  getCalendarBlobList, postCalendarBlobCreate,\r\n  postCalendarBlobBlobID, deleteCalendarBlobBlobID,\r\n} from '../modules/calendarApi';\r\n\r\nimport {\r\n  dateToStringLocal, combineDateTimeString, extractTimeString,\r\n  stringToDatetimeLocal, stringToDateLocal, extractDateString,\r\n} from '../modules/utils';\r\n\r\nfunction Calendar({ username }) {\r\n  const [date, setDate] = useState(dateToStringLocal(new Date()));\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [_updateListValue, updateLists] = useState(0);\r\n\r\n  return (\r\n    <CalendarContainer\r\n      username={username}\r\n      date={date}\r\n      setDate={setDate}\r\n      eventListPromise={getCalendarEventList(username)}\r\n      blobListPromise={getCalendarBlobList(date, username)}\r\n      updateLists={updateLists}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CalendarContainer({\r\n  username, date, setDate, eventListPromise, blobListPromise, updateLists,\r\n}) {\r\n  const [eventList, setEventList] = useState([]);\r\n  eventListPromise.then((value) => { setEventList(value); });\r\n  const [blobList, setBlobList] = useState([]);\r\n  blobListPromise.then((value) => { setBlobList(value); });\r\n\r\n  const [selectedBlob, setSelectedBlob] = useState('');\r\n\r\n  // console.log('CalendarContainer rerendered');\r\n  // console.log('eventList value:');\r\n  // console.log(eventList);\r\n\r\n  return (\r\n    <div id=\"calendar\">\r\n      <div id=\"editBar\">\r\n        <div id=\"topBar\">\r\n          <FaCalendarAlt id=\"top\" />\r\n          { ' ' }\r\n          <DatePicker date={date} setDate={setDate} setSelectedBlob={setSelectedBlob} />\r\n          <br />\r\n        </div>\r\n        <EventAdder username={username} updateLists={updateLists} />\r\n        <br />\r\n        <BlobAdder\r\n          username={username}\r\n          eventList={eventList}\r\n          date={date}\r\n          updateLists={updateLists}\r\n        />\r\n        <br />\r\n      </div>\r\n      <CalendarView\r\n        blobList={blobList}\r\n        selectedBlob={selectedBlob}\r\n        setSelectedBlob={setSelectedBlob}\r\n      />\r\n      <BlobEditor\r\n        username={username}\r\n        date={date}\r\n        selectedBlob={selectedBlob}\r\n        setSelectedBlob={setSelectedBlob}\r\n        updateLists={updateLists}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction EventAdder({ username, updateLists }) {\r\n  function createEvent() {\r\n    const eventNameInput = document.getElementById('eventnameinput');\r\n    const eventColorPicker = document.getElementById('eventcolorpicker');\r\n    const eventName = eventNameInput.value;\r\n    const eventColor = eventColorPicker.value;\r\n    eventNameInput.value = 'Default Event Name';\r\n    eventColorPicker.value = '#888888';\r\n    // eslint-disable-next-line max-len\r\n    (async function anon1BlobAdder() {\r\n      await postCalendarEventCreate(username, eventName, eventColor);\r\n      updateLists((val) => (!val));\r\n    }());\r\n  }\r\n\r\n  // console.log('EventAdder rerendered');\r\n\r\n  return (\r\n    <div id=\"eventadder\">\r\n      <div>\r\n        <h3>Create New Event</h3>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"eventnameinput\">\r\n          Event Name:&nbsp;\r\n          <input type=\"text\" id=\"eventnameinput\" className=\"calLabel\" defaultValue=\"Default Event Name\" />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"eventcolorpicker\">\r\n          Event Color:&nbsp;\r\n          <input type=\"color\" id=\"eventcolorpicker\" className=\"calLabel\" defaultValue=\"#888888\" />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <input type=\"button\" value=\"Create New Event\" className=\"calLabel\" onClick={createEvent} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction BlobAdder({\r\n  username, eventList, updateLists, date,\r\n}) {\r\n  // console.log('BlobAdder rerendered');\r\n  // console.log('eventList value:');\r\n  // console.log(eventList);\r\n\r\n  function createBlob() {\r\n    const eventPicker = document.getElementById('eventpicker');\r\n    const startTimePicker = document.getElementById('starttimepicker');\r\n    const endTimePicker = document.getElementById('endtimepicker');\r\n    const eventID = eventPicker.value;\r\n    const startDateTime = combineDateTimeString(date, startTimePicker.value);\r\n    const endDateTime = combineDateTimeString(date, endTimePicker.value);\r\n    startTimePicker.value = '';\r\n    endTimePicker.value = '';\r\n    (async function anon1BlobAdder() {\r\n      await postCalendarBlobCreate(eventID, username, startDateTime, endDateTime);\r\n      updateLists((val) => (!val));\r\n    }());\r\n  }\r\n\r\n  function deleteEvent() {\r\n    const eventPicker = document.getElementById('eventpicker');\r\n    const eventID = eventPicker.value;\r\n    const startTimePicker = document.getElementById('starttimepicker');\r\n    const endTimePicker = document.getElementById('endtimepicker');\r\n    startTimePicker.value = '';\r\n    endTimePicker.value = '';\r\n    (async function anon2BlobAdder() {\r\n      await deleteCalendarEventEventID(eventID, username);\r\n      updateLists((val) => (!val));\r\n    }());\r\n  }\r\n\r\n  return (\r\n    <div id=\"blobadder\">\r\n      <div>\r\n        <h3>Add Events to Calendar</h3>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"eventpicker\">\r\n          Event:&nbsp;\r\n          <select id=\"eventpicker\" className=\"calLabel\">\r\n            {eventList.map((event) => (\r\n              <option key={event.event_id} value={event.event_id}>{event.name}</option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n      &nbsp;\r\n      <div>\r\n        <label htmlFor=\"starttimepicker\">\r\n          Start time:&nbsp;\r\n          <input type=\"time\" className=\"calLabel\" id=\"starttimepicker\" />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"endtimepicker\">\r\n          End time:&nbsp;\r\n          <input type=\"time\" className=\"calLabel\" id=\"endtimepicker\" />\r\n        </label>\r\n      </div>\r\n      <br />\r\n      <div>\r\n        <input type=\"button\" value=\"Delete Event\" className=\"calLabel\" onClick={deleteEvent} />\r\n        <input type=\"button\" value=\"Create New Blob\" className=\"calLabel\" onClick={createBlob} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction BlobEditor({\r\n  username, date, updateLists, selectedBlob, setSelectedBlob,\r\n}) {\r\n  function editBlob() {\r\n    const startTimePicker = document.getElementById('starttimepickermodify');\r\n    const endTimePicker = document.getElementById('endtimepickermodify');\r\n    const startDateTime = combineDateTimeString(date, startTimePicker.value);\r\n    const endDateTime = combineDateTimeString(date, endTimePicker.value);\r\n    startTimePicker.value = '';\r\n    endTimePicker.value = '';\r\n    setSelectedBlob(null);\r\n    (async function anon1BlobEditor() {\r\n      await postCalendarBlobBlobID(\r\n        selectedBlob.blob_id,\r\n        selectedBlob.event.event_id,\r\n        username,\r\n        startDateTime,\r\n        endDateTime,\r\n      );\r\n      updateLists((val) => (!val));\r\n    }());\r\n  }\r\n\r\n  function deleteBlob() {\r\n    const startTimePicker = document.getElementById('starttimepickermodify');\r\n    const endTimePicker = document.getElementById('endtimepickermodify');\r\n    startTimePicker.value = '';\r\n    endTimePicker.value = '';\r\n    setSelectedBlob(null);\r\n    (async function anonwBlobEditor() {\r\n      await deleteCalendarBlobBlobID(\r\n        selectedBlob.blob_id,\r\n        selectedBlob.event.event_id,\r\n        username,\r\n      );\r\n      updateLists((val) => (!val));\r\n    }());\r\n  }\r\n\r\n  const prevBlob = useRef(null);\r\n\r\n  const startTimePicker = document.getElementById('starttimepickermodify');\r\n  const endTimePicker = document.getElementById('endtimepickermodify');\r\n  if (!selectedBlob) {\r\n    if (startTimePicker) {\r\n      startTimePicker.value = '';\r\n    }\r\n    if (endTimePicker) {\r\n      endTimePicker.value = '';\r\n    }\r\n  } else {\r\n    if (startTimePicker && (!startTimePicker.value || (prevBlob.current !== selectedBlob))) {\r\n      startTimePicker.value = extractTimeString(selectedBlob.time.start);\r\n    }\r\n    if (endTimePicker && (!endTimePicker.value || (prevBlob.current !== selectedBlob))) {\r\n      endTimePicker.value = extractTimeString(selectedBlob.time.end);\r\n    }\r\n  }\r\n\r\n  prevBlob.current = selectedBlob;\r\n\r\n  // console.log('BlobEditor rerendered');\r\n\r\n  return (\r\n    <div id=\"blobeditor\">\r\n      <div>\r\n        <h3>Edit Event on Calendar</h3>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"starttimepickermodify\">\r\n          Start time:&nbsp;\r\n          <input type=\"time\" className=\"calLabel\" id=\"starttimepickermodify\" />\r\n        </label>\r\n      </div>\r\n      &nbsp;\r\n      <div>\r\n        <label htmlFor=\"endtimepickermodify\">\r\n          End time:&nbsp;\r\n          <input type=\"time\" className=\"calLabel\" id=\"endtimepickermodify\" />\r\n        </label>\r\n      </div>\r\n      <br />\r\n      <input type=\"button\" value=\"Edit Blob Time\" className=\"calLabel\" onClick={editBlob} />\r\n      <input type=\"button\" value=\"Delete Blob\" className=\"calLabel\" onClick={deleteBlob} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction DatePicker({ date, setDate, setSelectedBlob }) {\r\n  function dateChanged(e) {\r\n    if (e.target.value) {\r\n      setSelectedBlob(null);\r\n      setDate(e.target.value);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <label htmlFor=\"datepicker\">\r\n      Choose date:&nbsp;\r\n      <input type=\"date\" id=\"datepicker\" defaultValue={date} onChange={dateChanged} />\r\n    </label>\r\n  );\r\n}\r\n\r\nconst calendarWidth = 400;\r\nconst calendarHeight = 1000;\r\nconst calendarPadL = 50;\r\nconst calendarPadR = 10;\r\nconst calendarPadU = 10;\r\nconst calendarPadD = 10;\r\n\r\nfunction CalendarView({ blobList, selectedBlob, setSelectedBlob }) {\r\n  const hourList = Array.from({ length: 24 }, (_x, i) => i);\r\n  // console.log('CalendarView rerendered');\r\n  // console.log(blobList);\r\n  return (\r\n    <div className=\"calendarview\">\r\n      <svg\r\n        width={calendarPadL + calendarWidth + calendarPadR}\r\n        height={calendarPadU + calendarHeight + calendarPadD}\r\n      >\r\n        <rect x={calendarPadL} y={calendarPadU} width={calendarWidth} height={calendarHeight} stroke=\"black\" strokeWidth=\"0.4%\" />\r\n        {hourList.map((hour) => <HourBox key={hour} hour={hour} />)}\r\n        {blobList.map((blob) => (\r\n          <CalendarBlob key={`${blob.event.event_id}_${blob.blob_id}`} selectedBlob={selectedBlob} setSelectedBlob={setSelectedBlob} blob={blob} />\r\n        ))}\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CalendarBlob({ blob, selectedBlob, setSelectedBlob }) {\r\n  const millisAtMidnight = stringToDateLocal(extractDateString(blob.time.start)).getTime();\r\n  const millisAtStart = stringToDatetimeLocal(blob.time.start).getTime() - millisAtMidnight;\r\n  const millisAtEnd = stringToDatetimeLocal(blob.time.end).getTime() - millisAtMidnight;\r\n  const millisDay = 86400000; // Milliseconds in a day\r\n\r\n  const x = calendarPadL;\r\n  const y = calendarPadU + (calendarHeight * millisAtStart) / millisDay;\r\n  const height = (calendarHeight * (millisAtEnd - millisAtStart)) / millisDay;\r\n  const width = calendarWidth;\r\n\r\n  const label = blob.event.name;\r\n\r\n  // eslint-disable-next-line prefer-destructuring\r\n  const color = blob.event.color;\r\n\r\n  return (\r\n    <g onClick={() => (setSelectedBlob(blob))}>\r\n      <rect\r\n        x={x}\r\n        y={y}\r\n        width={width}\r\n        height={height}\r\n        fill={color}\r\n        stroke=\"black\"\r\n        strokeWidth={(selectedBlob === blob) ? '1%' : '0.2%'}\r\n        opacity=\"0.7\"\r\n      />\r\n      <text\r\n        x={x + width / 2}\r\n        y={y + height / 3}\r\n        dominantBaseline=\"middle\"\r\n        textAnchor=\"middle\"\r\n      >\r\n        <tspan textAnchor=\"middle\" x={x + width / 2}>\r\n          {label}\r\n        </tspan>\r\n        <tspan textAnchor=\"middle\" x={x + width / 2} dy=\"1.2em\">\r\n          {extractTimeString(blob.time.start)}\r\n          -\r\n          {extractTimeString(blob.time.end)}\r\n        </tspan>\r\n      </text>\r\n    </g>\r\n  );\r\n}\r\n\r\nfunction HourBox({ hour }) {\r\n  const height = calendarHeight / 24;\r\n  const width = calendarWidth;\r\n  const x = calendarPadL;\r\n  const y = calendarPadU + (hour * height);\r\n  const color = (hour % 2) ? 'white' : '#cccccc';\r\n\r\n  return (\r\n    <g>\r\n      <rect x={x} y={y} width={width} height={height} fill={color} />\r\n      <text x={0} y={y + height / 4} dominantBaseline=\"middle\">\r\n        {hour.toString().padStart(2, '0')}\r\n        :00\r\n      </text>\r\n    </g>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}