{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pojoj\\\\Documents\\\\CIS350APP\\\\naurrrwhalsAppDeployment\\\\naur-app\\\\src\\\\components\\\\TaskHolder.js\",\n    _s = $RefreshSig$();\n\nimport { React, useRef, useState } from 'react'; // useState\n\nimport Task from './Task';\nimport '../assets/Taskview.css';\nimport { postNewTask, getTaskList } from '../modules/taskApi';\nimport { dateToStringLocal } from '../modules/timeFuncs'; // on passing functions to child and back up:\n// https://stackoverflow.com/questions/38394015/how-to-pass-data-from-child-component-to-its-parent-in-reactjs\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction rankOf(task) {\n  return parseInt((task === null || task === void 0 ? void 0 : task.notes) || '0', 10) || 0;\n}\n\nfunction noSorter(arr) {\n  return arr;\n}\n\nfunction alphaSorter(arr) {\n  return arr.sort((a, b) => {\n    if (a.title < b.title) {\n      return -1;\n    }\n\n    if (a.title > b.title) {\n      return 1;\n    }\n\n    return 0;\n  });\n}\n\nfunction dateSorter(arr) {\n  return arr.sort((a, b) => {\n    if (a.due_date < b.due_date) {\n      return -1;\n    }\n\n    if (a.due_date > b.due_date) {\n      return 1;\n    }\n\n    return 0;\n  });\n}\n\nfunction rankSorter(arr) {\n  return arr.sort((a, b) => {\n    if (rankOf(a) < rankOf(b)) {\n      return 1;\n    }\n\n    if (rankOf(a) > rankOf(b)) {\n      return -1;\n    }\n\n    return 0;\n  });\n}\n\nfunction TaskView(_ref) {\n  _s();\n\n  let {\n    username\n  } = _ref;\n  const sortFunc = useRef(noSorter);\n  const [taskList, setTaskList] = useState([]);\n  const gotList = useRef(false);\n\n  if (!gotList.current) {\n    gotList.current = true;\n\n    (async () => {\n      setTaskList(sortFunc.current(await getTaskList(username)));\n    })();\n  }\n\n  function handleAdd(e) {\n    var _document$getElementB;\n\n    e.preventDefault();\n    const title = (_document$getElementB = document.getElementById('newTask')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.value;\n\n    if (!title || !(title !== null && title !== void 0 && title.length)) {\n      return;\n    }\n\n    const date = dateToStringLocal(new Date());\n    const rank = 0;\n    const newTask = {\n      title,\n      due_date: date,\n      notes: `${rank}`\n    };\n\n    (async () => {\n      await postNewTask(username, newTask);\n      setTaskList(sortFunc.current(await getTaskList(username)));\n    })();\n  }\n\n  function setSorter(sorter) {\n    sortFunc.current = sorter;\n\n    (async () => {\n      setTaskList(sortFunc.current(await getTaskList(username)));\n    })();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskView\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Here are your things!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-body\",\n      id: \"parent\",\n      children: taskList.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Task, {\n          task: task,\n          sortFunc: sortFunc,\n          setTaskList: setTaskList,\n          username: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, `${task.task_id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"newTask\",\n          placeholder: \"New task name here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"taskButton\",\n          onClick: () => {\n            setSorter(alphaSorter);\n          },\n          children: \"Sort by Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"taskButton\",\n          onClick: handleAdd,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"taskButton\",\n          onClick: () => {\n            setSorter(rankSorter);\n          },\n          children: \"Sort by Rank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"taskButton\",\n          onClick: () => {\n            setSorter(dateSorter);\n          },\n          children: \"Sort by Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"taskButton\",\n          onClick: () => {\n            setSorter(noSorter);\n          },\n          children: \"Don't Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskView, \"h9QHBj1r7Jv/zYyLHj2t3Vn6Y6E=\");\n\n_c = TaskView;\nexport default TaskView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskView\");","map":{"version":3,"sources":["C:/Users/pojoj/Documents/CIS350APP/naurrrwhalsAppDeployment/naur-app/src/components/TaskHolder.js"],"names":["React","useRef","useState","Task","postNewTask","getTaskList","dateToStringLocal","rankOf","task","parseInt","notes","noSorter","arr","alphaSorter","sort","a","b","title","dateSorter","due_date","rankSorter","TaskView","username","sortFunc","taskList","setTaskList","gotList","current","handleAdd","e","preventDefault","document","getElementById","value","length","date","Date","rank","newTask","setSorter","sorter","map","task_id"],"mappings":"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","sourcesContent":["import { React, useRef, useState } from 'react'; // useState\r\nimport Task from './Task';\r\nimport '../assets/Taskview.css';\r\nimport {\r\n  postNewTask, getTaskList,\r\n} from '../modules/taskApi';\r\nimport { dateToStringLocal } from '../modules/timeFuncs';\r\n\r\n// on passing functions to child and back up:\r\n// https://stackoverflow.com/questions/38394015/how-to-pass-data-from-child-component-to-its-parent-in-reactjs\r\n\r\nfunction rankOf(task) {\r\n  return parseInt(task?.notes || '0', 10) || 0;\r\n}\r\n\r\nfunction noSorter(arr) {\r\n  return arr;\r\n}\r\n\r\nfunction alphaSorter(arr) {\r\n  return arr.sort((a, b) => {\r\n    if (a.title < b.title) {\r\n      return -1;\r\n    } if (a.title > b.title) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  });\r\n}\r\n\r\nfunction dateSorter(arr) {\r\n  return arr.sort((a, b) => {\r\n    if (a.due_date < b.due_date) {\r\n      return -1;\r\n    } if (a.due_date > b.due_date) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  });\r\n}\r\n\r\nfunction rankSorter(arr) {\r\n  return arr.sort((a, b) => {\r\n    if (rankOf(a) < rankOf(b)) {\r\n      return 1;\r\n    } if (rankOf(a) > rankOf(b)) {\r\n      return -1;\r\n    }\r\n    return 0;\r\n  });\r\n}\r\n\r\nfunction TaskView({ username }) {\r\n  const sortFunc = useRef(noSorter);\r\n  const [taskList, setTaskList] = useState([]);\r\n  const gotList = useRef(false);\r\n\r\n  if (!gotList.current) {\r\n    gotList.current = true;\r\n    (async () => {\r\n      setTaskList(sortFunc.current(await getTaskList(username)));\r\n    })();\r\n  }\r\n\r\n  function handleAdd(e) {\r\n    e.preventDefault();\r\n    const title = document.getElementById('newTask')?.value;\r\n    if ((!title) || (!title?.length)) {\r\n      return;\r\n    }\r\n    const date = dateToStringLocal(new Date());\r\n    const rank = 0;\r\n    const newTask = {\r\n      title,\r\n      due_date: date,\r\n      notes: `${rank}`,\r\n    };\r\n    (async () => {\r\n      await postNewTask(username, newTask);\r\n      setTaskList(sortFunc.current(await getTaskList(username)));\r\n    })();\r\n  }\r\n\r\n  function setSorter(sorter) {\r\n    sortFunc.current = sorter;\r\n    (async () => {\r\n      setTaskList(sortFunc.current(await getTaskList(username)));\r\n    })();\r\n  }\r\n\r\n  return (\r\n    <div className=\"taskView\">\r\n      <header>\r\n        <h1>Here are your things!</h1>\r\n      </header>\r\n      <div className=\"task-body\" id=\"parent\">\r\n        {taskList.map((task) => (\r\n          <div key={`${task.task_id}`}>\r\n            <Task\r\n              task={task}\r\n              sortFunc={sortFunc}\r\n              setTaskList={setTaskList}\r\n              username={username}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <footer>\r\n        <form>\r\n          <input type=\"text\" id=\"newTask\" placeholder=\"New task name here\" />\r\n        </form>\r\n        <div>\r\n          <button type=\"submit\" className=\"taskButton\" onClick={() => { setSorter(alphaSorter); }}>Sort by Name</button>\r\n          <button type=\"submit\" className=\"taskButton\" onClick={handleAdd}>Add</button>\r\n          <button type=\"submit\" className=\"taskButton\" onClick={() => { setSorter(rankSorter); }}>Sort by Rank</button>\r\n          <br />\r\n          <button type=\"submit\" className=\"taskButton\" onClick={() => { setSorter(dateSorter); }}>Sort by Date</button>\r\n          <button type=\"submit\" className=\"taskButton\" onClick={() => { setSorter(noSorter); }}>Don&apos;t Sort</button>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default TaskView;\r\n"]},"metadata":{},"sourceType":"module"}