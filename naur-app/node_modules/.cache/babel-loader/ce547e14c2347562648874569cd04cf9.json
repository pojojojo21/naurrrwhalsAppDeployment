{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pojoj\\\\Documents\\\\CIS350APP\\\\naurrrwhalsAppDeployment\\\\naur-app\\\\src\\\\components\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport '../assets/Register.css'; // import { postMessagingUser } from '../modules/messageApi';\n\nimport { postRegister } from '../modules/loginApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction usernameError(str) {\n  if (!str.match(/^[A-Za-z0-9_]*$/)) {\n    return 'Username must be made up of letters, numbers, or underscores';\n  }\n\n  if (!str.match(/^[A-Za-z_][A-Za-z0-9_]*$/)) {\n    return 'Username must start with a letter or underscore';\n  }\n\n  if (!str.match(/[A-Za-z0-9]/)) {\n    return 'Username must contain contain at least one letter or number';\n  }\n\n  if (!(str.length >= 3)) {\n    return 'Username must be at least 3 characters long';\n  }\n\n  return '';\n} // Returns error if the given string is not a valid password\n\n\nfunction passwordError(str) {\n  if (!str.match(/^[A-Za-z0-9\\\\!\"#$%&'()*+,\\-./:;<=>?@[\\]^_`{|}~]+$/)) {\n    return 'Password contains illegal character';\n  }\n\n  if (!(str.length >= 6)) {\n    return 'Password must be at least 6 characters long';\n  }\n\n  return '';\n}\n\nfunction Register(_ref) {\n  _s();\n\n  let {\n    setUsername,\n    setNewUserState\n  } = _ref;\n  const [errorMessage, setErrorMessage] = useState('');\n\n  function handleUsernameInput(e) {\n    const name = e.target.value;\n\n    if (name === '') {\n      setErrorMessage('');\n    } else {\n      setErrorMessage(usernameError(name));\n    }\n  }\n\n  function handlePasswordInput(e) {\n    const pword = e.target.value;\n\n    if (pword === '') {\n      setErrorMessage('');\n    } else {\n      setErrorMessage(passwordError(pword));\n    }\n  }\n\n  function handleRegister(e) {\n    e.preventDefault();\n    const name = document.getElementById('username').value;\n    const pword = document.getElementById('password').value;\n    const nameErr = usernameError(name);\n    const pwordErr = passwordError(pword);\n\n    if (nameErr) {\n      setErrorMessage(nameErr);\n      return;\n    }\n\n    if (pwordErr) {\n      setErrorMessage(pwordErr);\n      return;\n    }\n\n    (async function handleRegisterAsync() {\n      const status = await postRegister(name, pword);\n\n      if (status === 403) {\n        setErrorMessage('User already exists');\n        return;\n      }\n\n      if (status < 200 || status >= 300) {\n        setErrorMessage('An unknown error occured');\n        return;\n      } // eslint-disable-next-line no-param-reassign\n\n\n      setUsername(name);\n    })();\n  }\n\n  function handleBack() {\n    setNewUserState(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registrationWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"sec1\",\n      children: \"tell us a little about yourself\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: [\"\\xA0\", errorMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleRegister,\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          children: \"CONFIRM USERNAME*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"lInputs\",\n          type: \"text\",\n          id: \"username\",\n          placeholder: \"Johndoe\",\n          onChange: handleUsernameInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          children: \"CONFIRM PASSWORD*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"lInputs\",\n          type: \"password\",\n          id: \"password\",\n          placeholder: \"password123\",\n          onChange: handlePasswordInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"lButtons\",\n        type: \"submit\",\n        onClick: handleRegister,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"lButtons\",\n        type: \"submit\",\n        onClick: handleBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"Qa+fXmSUSiSzKMj9v3Zv5vD0nos=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/pojoj/Documents/CIS350APP/naurrrwhalsAppDeployment/naur-app/src/components/Register.js"],"names":["React","useState","postRegister","usernameError","str","match","length","passwordError","Register","setUsername","setNewUserState","errorMessage","setErrorMessage","handleUsernameInput","e","name","target","value","handlePasswordInput","pword","handleRegister","preventDefault","document","getElementById","nameErr","pwordErr","handleRegisterAsync","status","handleBack"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,wBAAP,C,CACA;;AACA,SAASC,YAAT,QAA6B,qBAA7B;;;AAEA,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;AAC1B,MAAI,CAACA,GAAG,CAACC,KAAJ,CAAU,iBAAV,CAAL,EAAmC;AACjC,WAAO,8DAAP;AACD;;AACD,MAAI,CAACD,GAAG,CAACC,KAAJ,CAAU,0BAAV,CAAL,EAA4C;AAC1C,WAAO,iDAAP;AACD;;AACD,MAAI,CAACD,GAAG,CAACC,KAAJ,CAAU,aAAV,CAAL,EAA+B;AAC7B,WAAO,6DAAP;AACD;;AACD,MAAI,EAAED,GAAG,CAACE,MAAJ,IAAc,CAAhB,CAAJ,EAAwB;AACtB,WAAO,6CAAP;AACD;;AACD,SAAO,EAAP;AACD,C,CAED;;;AACA,SAASC,aAAT,CAAuBH,GAAvB,EAA4B;AAC1B,MAAI,CAACA,GAAG,CAACC,KAAJ,CAAU,mDAAV,CAAL,EAAqE;AACnE,WAAO,qCAAP;AACD;;AACD,MAAI,EAAED,GAAG,CAACE,MAAJ,IAAc,CAAhB,CAAJ,EAAwB;AACtB,WAAO,6CAAP;AACD;;AACD,SAAO,EAAP;AACD;;AAED,SAASE,QAAT,OAAoD;AAAA;;AAAA,MAAlC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAkC;AAClD,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;;AAEA,WAASY,mBAAT,CAA6BC,CAA7B,EAAgC;AAC9B,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAtB;;AACA,QAAIF,IAAI,KAAK,EAAb,EAAiB;AACfH,MAAAA,eAAe,CAAC,EAAD,CAAf;AACD,KAFD,MAEO;AACLA,MAAAA,eAAe,CAACT,aAAa,CAACY,IAAD,CAAd,CAAf;AACD;AACF;;AAED,WAASG,mBAAT,CAA6BJ,CAA7B,EAAgC;AAC9B,UAAMK,KAAK,GAAGL,CAAC,CAACE,MAAF,CAASC,KAAvB;;AACA,QAAIE,KAAK,KAAK,EAAd,EAAkB;AAChBP,MAAAA,eAAe,CAAC,EAAD,CAAf;AACD,KAFD,MAEO;AACLA,MAAAA,eAAe,CAACL,aAAa,CAACY,KAAD,CAAd,CAAf;AACD;AACF;;AAED,WAASC,cAAT,CAAwBN,CAAxB,EAA2B;AACzBA,IAAAA,CAAC,CAACO,cAAF;AACA,UAAMN,IAAI,GAAGO,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCN,KAAjD;AACA,UAAME,KAAK,GAAGG,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCN,KAAlD;AACA,UAAMO,OAAO,GAAGrB,aAAa,CAACY,IAAD,CAA7B;AACA,UAAMU,QAAQ,GAAGlB,aAAa,CAACY,KAAD,CAA9B;;AACA,QAAIK,OAAJ,EAAa;AACXZ,MAAAA,eAAe,CAACY,OAAD,CAAf;AACA;AACD;;AACD,QAAIC,QAAJ,EAAc;AACZb,MAAAA,eAAe,CAACa,QAAD,CAAf;AACA;AACD;;AAEA,oBAAeC,mBAAf,GAAqC;AACpC,YAAMC,MAAM,GAAG,MAAMzB,YAAY,CAACa,IAAD,EAAOI,KAAP,CAAjC;;AACA,UAAIQ,MAAM,KAAK,GAAf,EAAoB;AAClBf,QAAAA,eAAe,CAAC,qBAAD,CAAf;AACA;AACD;;AACD,UAAKe,MAAM,GAAG,GAAV,IAAmBA,MAAM,IAAI,GAAjC,EAAuC;AACrCf,QAAAA,eAAe,CAAC,0BAAD,CAAf;AACA;AACD,OATmC,CAUpC;;;AACAH,MAAAA,WAAW,CAACM,IAAD,CAAX;AACD,KAZA,GAAD;AAaD;;AAED,WAASa,UAAT,GAAsB;AACpBlB,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,2BAEGC,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAM,QAAA,QAAQ,EAAES,cAAhB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,SAAS,EAAC,SAAjB;AAA2B,UAAA,IAAI,EAAC,MAAhC;AAAuC,UAAA,EAAE,EAAC,UAA1C;AAAqD,UAAA,WAAW,EAAC,SAAjE;AAA2E,UAAA,QAAQ,EAAEP;AAArF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAO,UAAA,SAAS,EAAC,SAAjB;AAA2B,UAAA,IAAI,EAAC,UAAhC;AAA2C,UAAA,EAAE,EAAC,UAA9C;AAAyD,UAAA,WAAW,EAAC,aAArE;AAAmF,UAAA,QAAQ,EAAEK;AAA7F;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAYE;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAA6B,QAAA,IAAI,EAAC,QAAlC;AAA2C,QAAA,OAAO,EAAEE,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAA6B,QAAA,IAAI,EAAC,QAAlC;AAA2C,QAAA,OAAO,EAAEQ,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAhFQpB,Q;;KAAAA,Q;AAkFT,eAAeA,QAAf","sourcesContent":["import { React, useState } from 'react';\r\nimport '../assets/Register.css';\r\n// import { postMessagingUser } from '../modules/messageApi';\r\nimport { postRegister } from '../modules/loginApi';\r\n\r\nfunction usernameError(str) {\r\n  if (!str.match(/^[A-Za-z0-9_]*$/)) {\r\n    return 'Username must be made up of letters, numbers, or underscores';\r\n  }\r\n  if (!str.match(/^[A-Za-z_][A-Za-z0-9_]*$/)) {\r\n    return 'Username must start with a letter or underscore';\r\n  }\r\n  if (!str.match(/[A-Za-z0-9]/)) {\r\n    return 'Username must contain contain at least one letter or number';\r\n  }\r\n  if (!(str.length >= 3)) {\r\n    return 'Username must be at least 3 characters long';\r\n  }\r\n  return '';\r\n}\r\n\r\n// Returns error if the given string is not a valid password\r\nfunction passwordError(str) {\r\n  if (!str.match(/^[A-Za-z0-9\\\\!\"#$%&'()*+,\\-./:;<=>?@[\\]^_`{|}~]+$/)) {\r\n    return 'Password contains illegal character';\r\n  }\r\n  if (!(str.length >= 6)) {\r\n    return 'Password must be at least 6 characters long';\r\n  }\r\n  return '';\r\n}\r\n\r\nfunction Register({ setUsername, setNewUserState }) {\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  function handleUsernameInput(e) {\r\n    const name = e.target.value;\r\n    if (name === '') {\r\n      setErrorMessage('');\r\n    } else {\r\n      setErrorMessage(usernameError(name));\r\n    }\r\n  }\r\n\r\n  function handlePasswordInput(e) {\r\n    const pword = e.target.value;\r\n    if (pword === '') {\r\n      setErrorMessage('');\r\n    } else {\r\n      setErrorMessage(passwordError(pword));\r\n    }\r\n  }\r\n\r\n  function handleRegister(e) {\r\n    e.preventDefault();\r\n    const name = document.getElementById('username').value;\r\n    const pword = document.getElementById('password').value;\r\n    const nameErr = usernameError(name);\r\n    const pwordErr = passwordError(pword);\r\n    if (nameErr) {\r\n      setErrorMessage(nameErr);\r\n      return;\r\n    }\r\n    if (pwordErr) {\r\n      setErrorMessage(pwordErr);\r\n      return;\r\n    }\r\n\r\n    (async function handleRegisterAsync() {\r\n      const status = await postRegister(name, pword);\r\n      if (status === 403) {\r\n        setErrorMessage('User already exists');\r\n        return;\r\n      }\r\n      if ((status < 200) || (status >= 300)) {\r\n        setErrorMessage('An unknown error occured');\r\n        return;\r\n      }\r\n      // eslint-disable-next-line no-param-reassign\r\n      setUsername(name);\r\n    }());\r\n  }\r\n\r\n  function handleBack() {\r\n    setNewUserState(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"registrationWrapper\">\r\n      <div>\r\n        <h1>Welcome!</h1>\r\n      </div>\r\n      <div id=\"sec1\">\r\n        tell us a little about yourself\r\n      </div>\r\n      <div>\r\n        <div className=\"error\">\r\n          &nbsp;\r\n          {errorMessage}\r\n        </div>\r\n        <form onSubmit={handleRegister}>\r\n          <text>CONFIRM USERNAME*</text>\r\n          <input className=\"lInputs\" type=\"text\" id=\"username\" placeholder=\"Johndoe\" onChange={handleUsernameInput} />\r\n          <br />\r\n          <text>CONFIRM PASSWORD*</text>\r\n          <input className=\"lInputs\" type=\"password\" id=\"password\" placeholder=\"password123\" onChange={handlePasswordInput} />\r\n        </form>\r\n        <button className=\"lButtons\" type=\"submit\" onClick={handleRegister}>Register</button>\r\n        <button className=\"lButtons\" type=\"submit\" onClick={handleBack}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}