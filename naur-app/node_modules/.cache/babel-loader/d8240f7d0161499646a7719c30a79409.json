{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pojoj\\\\Documents\\\\CIS350APP\\\\naurrrwhalsAppDeployment\\\\naur-app\\\\src\\\\components\\\\ViewPendingDisplay.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport FriendList from './FriendList';\nimport { getPendingList, getPendingFirst, undoFriendRequest } from '../modules/messageApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewPendingDisplay(_ref) {\n  _s();\n\n  let {\n    username\n  } = _ref;\n  const [loadPendingList, setLoadPendingList] = useState(true);\n  const [list, setList] = useState(undefined);\n  const [selected, setSelected] = useState(undefined);\n\n  const handleUndoRequest = () => {\n    undoFriendRequest(username, selected).then(() => {\n      setLoadPendingList(!loadPendingList);\n    });\n  };\n\n  useEffect(() => {\n    getPendingList(username).then(pendinglist => {\n      setList(pendinglist);\n      getPendingFirst(username).then(first => {\n        setSelected(first);\n      });\n    });\n  }, [loadPendingList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Pending Friend Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), list !== undefined && selected !== undefined && /*#__PURE__*/_jsxDEV(FriendList, {\n      list: list,\n      selected: selected,\n      setSelected: setSelected,\n      setActionOne: handleUndoRequest,\n      actionTextOne: \"Remove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ViewPendingDisplay, \"nUkznnguBTxQ5BuHw639su5lQsg=\");\n\n_c = ViewPendingDisplay;\nViewPendingDisplay.propTypes = {\n  username: PropTypes.string.isRequired\n};\nexport default ViewPendingDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewPendingDisplay\");","map":{"version":3,"sources":["C:/Users/pojoj/Documents/CIS350APP/naurrrwhalsAppDeployment/naur-app/src/components/ViewPendingDisplay.js"],"names":["React","useState","useEffect","PropTypes","FriendList","getPendingList","getPendingFirst","undoFriendRequest","ViewPendingDisplay","username","loadPendingList","setLoadPendingList","list","setList","undefined","selected","setSelected","handleUndoRequest","then","pendinglist","first","propTypes","string","isRequired"],"mappings":";;;AAAA,SACEA,KADF,EACSC,QADT,EACmBC,SADnB,QAEO,OAFP;AAGA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,cAAT,EAAyBC,eAAzB,EAA0CC,iBAA1C,QAAmE,uBAAnE;;;AAEA,SAASC,kBAAT,OAA0C;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACxC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAACa,SAAD,CAAhC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAACa,SAAD,CAAxC;;AAEA,QAAMG,iBAAiB,GAAG,MAAM;AAC9BV,IAAAA,iBAAiB,CAACE,QAAD,EAAWM,QAAX,CAAjB,CAAsCG,IAAtC,CAA2C,MAAM;AAC/CP,MAAAA,kBAAkB,CAAC,CAACD,eAAF,CAAlB;AACD,KAFD;AAGD,GAJD;;AAMAR,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,cAAc,CAACI,QAAD,CAAd,CAAyBS,IAAzB,CAA+BC,WAAD,IAAiB;AAC7CN,MAAAA,OAAO,CAACM,WAAD,CAAP;AACAb,MAAAA,eAAe,CAACG,QAAD,CAAf,CAA0BS,IAA1B,CAAgCE,KAAD,IAAW;AACxCJ,QAAAA,WAAW,CAACI,KAAD,CAAX;AACD,OAFD;AAGD,KALD;AAMD,GAPQ,EAON,CAACV,eAAD,CAPM,CAAT;AASA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEIE,IAAI,KAAKE,SAAV,IAAyBC,QAAQ,KAAKD,SAAtC,iBACD,QAAC,UAAD;AACE,MAAA,IAAI,EAAEF,IADR;AAEE,MAAA,QAAQ,EAAEG,QAFZ;AAGE,MAAA,WAAW,EAAEC,WAHf;AAIE,MAAA,YAAY,EAAEC,iBAJhB;AAKE,MAAA,aAAa,EAAC;AALhB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAlCQT,kB;;KAAAA,kB;AAmCTA,kBAAkB,CAACa,SAAnB,GAA+B;AAC7BZ,EAAAA,QAAQ,EAAEN,SAAS,CAACmB,MAAV,CAAiBC;AADE,CAA/B;AAIA,eAAef,kBAAf","sourcesContent":["import {\r\n  React, useState, useEffect,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FriendList from './FriendList';\r\nimport { getPendingList, getPendingFirst, undoFriendRequest } from '../modules/messageApi';\r\n\r\nfunction ViewPendingDisplay({ username }) {\r\n  const [loadPendingList, setLoadPendingList] = useState(true);\r\n  const [list, setList] = useState(undefined);\r\n  const [selected, setSelected] = useState(undefined);\r\n\r\n  const handleUndoRequest = () => {\r\n    undoFriendRequest(username, selected).then(() => {\r\n      setLoadPendingList(!loadPendingList);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPendingList(username).then((pendinglist) => {\r\n      setList(pendinglist);\r\n      getPendingFirst(username).then((first) => {\r\n        setSelected(first);\r\n      });\r\n    });\r\n  }, [loadPendingList]);\r\n\r\n  return (\r\n    <div>\r\n      <div>Pending Friend Requests</div>\r\n      {(list !== undefined) && (selected !== undefined) && (\r\n      <FriendList\r\n        list={list}\r\n        selected={selected}\r\n        setSelected={setSelected}\r\n        setActionOne={handleUndoRequest}\r\n        actionTextOne=\"Remove\"\r\n      />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nViewPendingDisplay.propTypes = {\r\n  username: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ViewPendingDisplay;\r\n"]},"metadata":{},"sourceType":"module"}