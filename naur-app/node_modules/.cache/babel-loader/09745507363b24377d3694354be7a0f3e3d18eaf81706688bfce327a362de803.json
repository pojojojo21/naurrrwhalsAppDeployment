{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pojoj\\\\Documents\\\\CIS350APP\\\\naurrrwhalsAppDeployment\\\\naur-app\\\\src\\\\components\\\\regLock.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useRef } from 'react';\nimport { getSecurityQuestions, postResetPassword } from '../modules/loginApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegLock(_ref) {\n  _s();\n  let {\n    setLockout,\n    username\n  } = _ref;\n  const [questions, setQuestions] = useState([]);\n  const gotQuestions = useRef(false);\n  if (!gotQuestions.current) {\n    gotQuestions.current = true;\n    (async () => {\n      setQuestions(await getSecurityQuestions(username));\n    })();\n  }\n  function handleSubmit(e) {\n    var _document$getElementB2;\n    e.preventDefault();\n    const questionsAndAnswers = questions.map((q, i) => {\n      var _document$getElementB;\n      return {\n        question: q,\n        answer: (_document$getElementB = document.getElementById(`answer${i}`)) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.value\n      };\n    });\n    const newpass = (_document$getElementB2 = document.getElementById('newpass')) === null || _document$getElementB2 === void 0 ? void 0 : _document$getElementB2.value;\n    (async () => {\n      try {\n        const status = await postResetPassword(username, newpass, questionsAndAnswers);\n        if (status === 200) {\n          setLockout(false);\n        }\n      } catch (err) {\n        //\n      }\n    })();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Too many password attempts! Choose a new password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"newPasswordWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"newpass\",\n        className: \"newpass\",\n        type: \"text\",\n        placeholder: \"New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"securityQs\",\n      children: [questions.map((question, i) =>\n      /*#__PURE__*/\n      // eslint-disable-next-line react/no-array-index-key\n      _jsxDEV(\"div\", {\n        id: `questionholder${i}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: `question${i}`,\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: `answer${i}`,\n          type: \"text\",\n          placeholder: `Question ${i + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, `${i}: ${question}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleSubmit,\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(RegLock, \"c/K8VhpTSSH7mpXOx03rLiRH4LI=\");\n_c = RegLock;\nexport default RegLock;\nvar _c;\n$RefreshReg$(_c, \"RegLock\");","map":{"version":3,"names":["React","useState","useRef","getSecurityQuestions","postResetPassword","RegLock","setLockout","username","questions","setQuestions","gotQuestions","current","handleSubmit","e","preventDefault","questionsAndAnswers","map","q","i","question","answer","document","getElementById","value","newpass","status","err"],"sources":["C:/Users/pojoj/Documents/CIS350APP/naurrrwhalsAppDeployment/naur-app/src/components/regLock.js"],"sourcesContent":["import { React, useState, useRef } from 'react';\r\nimport { getSecurityQuestions, postResetPassword } from '../modules/loginApi';\r\n\r\nfunction RegLock({ setLockout, username }) {\r\n  const [questions, setQuestions] = useState([]);\r\n  const gotQuestions = useRef(false);\r\n\r\n  if (!gotQuestions.current) {\r\n    gotQuestions.current = true;\r\n    (async () => {\r\n      setQuestions(await getSecurityQuestions(username));\r\n    })();\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const questionsAndAnswers = questions.map((q, i) => (\r\n      {\r\n        question: q,\r\n        answer: document.getElementById(`answer${i}`)?.value,\r\n      }\r\n    ));\r\n    const newpass = document.getElementById('newpass')?.value;\r\n\r\n    (async () => {\r\n      try {\r\n        const status = await postResetPassword(username, newpass, questionsAndAnswers);\r\n        if (status === 200) {\r\n          setLockout(false);\r\n        }\r\n      } catch (err) {\r\n        //\r\n      }\r\n    })();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p>Too many password attempts! Choose a new password</p>\r\n      <div className=\"newPasswordWrapper\">\r\n        <input id=\"newpass\" className=\"newpass\" type=\"text\" placeholder=\"New Password\" />\r\n      </div>\r\n      <div className=\"securityQs\">\r\n        {/* <p>\r\n          $\r\n          {userObj.securityQuestions.first}\r\n        </p> */}\r\n        {questions.map((question, i) => (\r\n          // eslint-disable-next-line react/no-array-index-key\r\n          <div key={`${i}: ${question}`} id={`questionholder${i}`}>\r\n            <p id={`question${i}`}>\r\n              {question}\r\n            </p>\r\n            <input id={`answer${i}`} type=\"text\" placeholder={`Question ${i + 1}`} />\r\n          </div>\r\n        ))}\r\n        <button type=\"submit\" onClick={handleSubmit}>OK</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegLock;\r\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,SAASC,oBAAoB,EAAEC,iBAAiB,QAAQ,qBAAqB;AAAC;AAE9E,SAASC,OAAO,OAA2B;EAAA;EAAA,IAA1B;IAAEC,UAAU;IAAEC;EAAS,CAAC;EACvC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMS,YAAY,GAAGR,MAAM,CAAC,KAAK,CAAC;EAElC,IAAI,CAACQ,YAAY,CAACC,OAAO,EAAE;IACzBD,YAAY,CAACC,OAAO,GAAG,IAAI;IAC3B,CAAC,YAAY;MACXF,YAAY,CAAC,MAAMN,oBAAoB,CAACI,QAAQ,CAAC,CAAC;IACpD,CAAC,GAAG;EACN;EAEA,SAASK,YAAY,CAACC,CAAC,EAAE;IAAA;IACvBA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,mBAAmB,GAAGP,SAAS,CAACQ,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC;MAAA;MAAA,OAC7C;QACEC,QAAQ,EAAEF,CAAC;QACXG,MAAM,2BAAEC,QAAQ,CAACC,cAAc,CAAE,SAAQJ,CAAE,EAAC,CAAC,0DAArC,sBAAuCK;MACjD,CAAC;IAAA,CACF,CAAC;IACF,MAAMC,OAAO,6BAAGH,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,2DAAlC,uBAAoCC,KAAK;IAEzD,CAAC,YAAY;MACX,IAAI;QACF,MAAME,MAAM,GAAG,MAAMrB,iBAAiB,CAACG,QAAQ,EAAEiB,OAAO,EAAET,mBAAmB,CAAC;QAC9E,IAAIU,MAAM,KAAK,GAAG,EAAE;UAClBnB,UAAU,CAAC,KAAK,CAAC;QACnB;MACF,CAAC,CAAC,OAAOoB,GAAG,EAAE;QACZ;MAAA;IAEJ,CAAC,GAAG;EACN;EAEA,oBACE;IAAA,wBACE;MAAA,UAAG;IAAiD;MAAA;MAAA;MAAA;IAAA,QAAI,eACxD;MAAK,SAAS,EAAC,oBAAoB;MAAA,uBACjC;QAAO,EAAE,EAAC,SAAS;QAAC,SAAS,EAAC,SAAS;QAAC,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC;MAAc;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC7E,eACN;MAAK,SAAS,EAAC,YAAY;MAAA,WAKxBlB,SAAS,CAACQ,GAAG,CAAC,CAACG,QAAQ,EAAED,CAAC;MAAA;MACzB;MACA;QAA+B,EAAE,EAAG,iBAAgBA,CAAE,EAAE;QAAA,wBACtD;UAAG,EAAE,EAAG,WAAUA,CAAE,EAAE;UAAA,UACnBC;QAAQ;UAAA;UAAA;UAAA;QAAA,QACP,eACJ;UAAO,EAAE,EAAG,SAAQD,CAAE,EAAE;UAAC,IAAI,EAAC,MAAM;UAAC,WAAW,EAAG,YAAWA,CAAC,GAAG,CAAE;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA,GAJhE,GAAEA,CAAE,KAAIC,QAAS,EAAC;QAAA;QAAA;QAAA;MAAA,QAM9B,CAAC,eACF;QAAQ,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAEP,YAAa;QAAA,UAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACpD;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAzDQP,OAAO;AAAA,KAAPA,OAAO;AA2DhB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}