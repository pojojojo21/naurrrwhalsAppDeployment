{"ast":null,"code":"import axios from 'axios';\nimport rootURL from './url';\nasync function postRegister(username, password) {\n  const url = `${rootURL}/register`;\n  try {\n    const sendUserObj = {\n      username,\n      password\n    };\n    const response = await axios.post(url, sendUserObj);\n    return response.status;\n  } catch (err) {\n    var _err$response;\n    const status = err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status;\n    if (status === 403) {\n      return status;\n    }\n    throw new Error(`Error when calling ${url}`);\n  }\n}\nasync function postLogin(username, password) {\n  const url = `${rootURL}/login`;\n  try {\n    const sendUserObj = {\n      username,\n      password\n    };\n    const response = await axios.post(url, sendUserObj);\n    return response.status;\n  } catch (err) {\n    var _err$response2;\n    const status = err === null || err === void 0 ? void 0 : (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status;\n    if (status === 401 || status === 403 || status === 404) {\n      return status;\n    }\n    throw new Error(`Error when calling ${url}`);\n  }\n}\n\n// securityQuestions can be one question or an array of questions\nasync function postSecurityQuestions(username, securityQuestions) {\n  const url = `${rootURL}/securityquestions/${username}`;\n  try {\n    const response = await axios.post(url, securityQuestions);\n    return response.status;\n  } catch (err) {\n    throw new Error(`Error when calling ${url}`);\n  }\n}\nasync function getSecurityQuestions(username) {\n  const url = `${rootURL}/securityquestions/${username}`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (err) {\n    throw new Error(`Error when calling ${url}`);\n  }\n}\nasync function postResetPassword(username, newPassword, securityQuestions) {\n  const url = `${rootURL}/resetpassword/${username}`;\n  try {\n    const sendObj = {\n      new_password: newPassword,\n      security_questions: securityQuestions\n    };\n    const response = await axios.post(url, sendObj);\n    return response.status;\n  } catch (err) {\n    var _err$response3;\n    const status = err === null || err === void 0 ? void 0 : (_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.status;\n    if (status === 403) {\n      return status;\n    }\n    throw new Error(`Error when calling ${url}`);\n  }\n}\nasync function deleteUser(username) {\n  const url = `${rootURL}/deleteuser/${username}`;\n  try {\n    const response = await axios.delete(url);\n    return response.status;\n  } catch (err) {\n    var _err$response4;\n    const status = err === null || err === void 0 ? void 0 : (_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.status;\n    if (status === 404) {\n      return status;\n    }\n    throw new Error(`Error when calling ${url}`);\n  }\n}\nexport { postRegister, postLogin, postSecurityQuestions, getSecurityQuestions, postResetPassword, deleteUser };","map":{"version":3,"names":["axios","rootURL","postRegister","username","password","url","sendUserObj","response","post","status","err","Error","postLogin","postSecurityQuestions","securityQuestions","getSecurityQuestions","get","data","postResetPassword","newPassword","sendObj","new_password","security_questions","deleteUser","delete"],"sources":["C:/Users/pojoj/Documents/CIS350APP/naurrrwhalsAppDeployment/naur-app/src/modules/loginApi.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nimport rootURL from './url';\r\n\r\nasync function postRegister(username, password) {\r\n  const url = `${rootURL}/register`;\r\n  try {\r\n    const sendUserObj = { username, password };\r\n    const response = await axios.post(url, sendUserObj);\r\n    return response.status;\r\n  } catch (err) {\r\n    const status = err?.response?.status;\r\n    if (status === 403) {\r\n      return status;\r\n    }\r\n    throw new Error(`Error when calling ${url}`);\r\n  }\r\n}\r\n\r\nasync function postLogin(username, password) {\r\n  const url = `${rootURL}/login`;\r\n  try {\r\n    const sendUserObj = { username, password };\r\n    const response = await axios.post(url, sendUserObj);\r\n    return response.status;\r\n  } catch (err) {\r\n    const status = err?.response?.status;\r\n    if (status === 401 || status === 403 || status === 404) {\r\n      return status;\r\n    }\r\n    throw new Error(`Error when calling ${url}`);\r\n  }\r\n}\r\n\r\n// securityQuestions can be one question or an array of questions\r\nasync function postSecurityQuestions(username, securityQuestions) {\r\n  const url = `${rootURL}/securityquestions/${username}`;\r\n  try {\r\n    const response = await axios.post(url, securityQuestions);\r\n    return response.status;\r\n  } catch (err) {\r\n    throw new Error(`Error when calling ${url}`);\r\n  }\r\n}\r\n\r\nasync function getSecurityQuestions(username) {\r\n  const url = `${rootURL}/securityquestions/${username}`;\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (err) {\r\n    throw new Error(`Error when calling ${url}`);\r\n  }\r\n}\r\n\r\nasync function postResetPassword(username, newPassword, securityQuestions) {\r\n  const url = `${rootURL}/resetpassword/${username}`;\r\n  try {\r\n    const sendObj = { new_password: newPassword, security_questions: securityQuestions };\r\n    const response = await axios.post(url, sendObj);\r\n    return response.status;\r\n  } catch (err) {\r\n    const status = err?.response?.status;\r\n    if (status === 403) {\r\n      return status;\r\n    }\r\n    throw new Error(`Error when calling ${url}`);\r\n  }\r\n}\r\n\r\nasync function deleteUser(username) {\r\n  const url = `${rootURL}/deleteuser/${username}`;\r\n  try {\r\n    const response = await axios.delete(url);\r\n    return response.status;\r\n  } catch (err) {\r\n    const status = err?.response?.status;\r\n    if (status === 404) {\r\n      return status;\r\n    }\r\n    throw new Error(`Error when calling ${url}`);\r\n  }\r\n}\r\n\r\nexport {\r\n  postRegister, postLogin,\r\n  postSecurityQuestions, getSecurityQuestions,\r\n  postResetPassword, deleteUser,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}