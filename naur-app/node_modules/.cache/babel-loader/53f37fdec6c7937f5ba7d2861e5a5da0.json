{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pojoj\\\\Documents\\\\CIS350APP\\\\naurrrwhalsAppDeployment\\\\naur-app\\\\src\\\\components\\\\MessageDisplay.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport '../assets/MessageDisplay.css';\nimport MessageList from './MessageList';\nimport SendMessageBox from './SendMessageBox';\nimport { getFriendExists, getMessageLog } from '../modules/messageApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MessageDisplay(_ref) {\n  _s();\n\n  let {\n    username,\n    time,\n    selected\n  } = _ref;\n  const [messageLog, setMessageLog] = useState(undefined);\n  useEffect(() => {\n    if (!selected) {\n      return;\n    }\n\n    getFriendExists(username, selected).then(hasFriend => {\n      if (!hasFriend) {\n        return;\n      }\n\n      getMessageLog(username, selected).then(log => {\n        setMessageLog(log);\n      });\n    });\n  }, [selected, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message_disp\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), selected === undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"You currently have no friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 37\n    }, this), !(selected === undefined) && !(messageLog === undefined) && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MessageList, {\n        username: username,\n        list: messageLog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SendMessageBox, {\n        username: username,\n        friendName: selected,\n        setMessageLog: setMessageLog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MessageDisplay, \"A6Qv7vApceKcO1C8qT3W/FJpCGo=\");\n\n_c = MessageDisplay;\nMessageDisplay.propTypes = {\n  username: PropTypes.string.isRequired,\n  time: PropTypes.number.isRequired,\n  selected: PropTypes.string\n};\nMessageDisplay.defaultProps = {\n  selected: undefined\n};\nexport default MessageDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageDisplay\");","map":{"version":3,"sources":["C:/Users/pojoj/Documents/CIS350APP/naurrrwhalsAppDeployment/naur-app/src/components/MessageDisplay.js"],"names":["React","useState","useEffect","PropTypes","MessageList","SendMessageBox","getFriendExists","getMessageLog","MessageDisplay","username","time","selected","messageLog","setMessageLog","undefined","then","hasFriend","log","propTypes","string","isRequired","number","defaultProps"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,8BAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,uBAA/C;;;AAEA,SAASC,cAAT,OAAsD;AAAA;;AAAA,MAA9B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA;AAAlB,GAA8B;AACpD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAACa,SAAD,CAA5C;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACS,QAAL,EAAe;AACb;AACD;;AACDL,IAAAA,eAAe,CAACG,QAAD,EAAWE,QAAX,CAAf,CAAoCI,IAApC,CAA0CC,SAAD,IAAe;AACtD,UAAI,CAACA,SAAL,EAAgB;AACd;AACD;;AACDT,MAAAA,aAAa,CAACE,QAAD,EAAWE,QAAX,CAAb,CAAkCI,IAAlC,CAAwCE,GAAD,IAAS;AAC9CJ,QAAAA,aAAa,CAACI,GAAD,CAAb;AACD,OAFD;AAGD,KAPD;AAQD,GAZQ,EAYN,CAACN,QAAD,EAAWD,IAAX,CAZM,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEIC,QAAQ,KAAKG,SAAd,iBAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFhC,EAGG,EAAEH,QAAQ,KAAKG,SAAf,KAA6B,EAAEF,UAAU,KAAKE,SAAjB,CAA7B,iBAEC;AAAA,8BACE,QAAC,WAAD;AACE,QAAA,QAAQ,EAAEL,QADZ;AAEE,QAAA,IAAI,EAAEG;AAFR;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,cAAD;AACE,QAAA,QAAQ,EAAEH,QADZ;AAEE,QAAA,UAAU,EAAEE,QAFd;AAGE,QAAA,aAAa,EAAEE;AAHjB;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAvCQL,c;;KAAAA,c;AAwCTA,cAAc,CAACU,SAAf,GAA2B;AACzBT,EAAAA,QAAQ,EAAEN,SAAS,CAACgB,MAAV,CAAiBC,UADF;AAEzBV,EAAAA,IAAI,EAAEP,SAAS,CAACkB,MAAV,CAAiBD,UAFE;AAGzBT,EAAAA,QAAQ,EAAER,SAAS,CAACgB;AAHK,CAA3B;AAMAX,cAAc,CAACc,YAAf,GAA8B;AAC5BX,EAAAA,QAAQ,EAAEG;AADkB,CAA9B;AAIA,eAAeN,cAAf","sourcesContent":["import { React, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../assets/MessageDisplay.css';\r\nimport MessageList from './MessageList';\r\nimport SendMessageBox from './SendMessageBox';\r\nimport { getFriendExists, getMessageLog } from '../modules/messageApi';\r\n\r\nfunction MessageDisplay({ username, time, selected }) {\r\n  const [messageLog, setMessageLog] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (!selected) {\r\n      return;\r\n    }\r\n    getFriendExists(username, selected).then((hasFriend) => {\r\n      if (!hasFriend) {\r\n        return;\r\n      }\r\n      getMessageLog(username, selected).then((log) => {\r\n        setMessageLog(log);\r\n      });\r\n    });\r\n  }, [selected, time]);\r\n\r\n  return (\r\n    <div className=\"message_disp\">\r\n      <div>Messages</div>\r\n      {(selected === undefined) && (<div>You currently have no friends</div>)}\r\n      {!(selected === undefined) && !(messageLog === undefined)\r\n      && (\r\n        <div>\r\n          <MessageList\r\n            username={username}\r\n            list={messageLog}\r\n          />\r\n\r\n          <div />\r\n          <SendMessageBox\r\n            username={username}\r\n            friendName={selected}\r\n            setMessageLog={setMessageLog}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nMessageDisplay.propTypes = {\r\n  username: PropTypes.string.isRequired,\r\n  time: PropTypes.number.isRequired,\r\n  selected: PropTypes.string,\r\n};\r\n\r\nMessageDisplay.defaultProps = {\r\n  selected: undefined,\r\n};\r\n\r\nexport default MessageDisplay;\r\n"]},"metadata":{},"sourceType":"module"}