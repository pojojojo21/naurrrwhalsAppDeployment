{"ast":null,"code":"/* eslint-disable camelcase */\nimport axios from 'axios';\nimport rootURL from './url';\n\n// GET /tasks/taskList/{user}\n// get tasklist\nasync function getTaskList(user) {\n  const url = `${rootURL}/tasks/tasklist/${user}`;\n  try {\n    const response = await axios.get(url);\n    const rtnArr = Array.isArray(response === null || response === void 0 ? void 0 : response.data) ? response === null || response === void 0 ? void 0 : response.data : [];\n    return rtnArr;\n  } catch (err) {\n    return [];\n  }\n}\n\n// GET /tasks/{task_id}/{user}\n// get tasklist\nasync function getTask(user, task_id) {\n  const url = `${rootURL}/tasks/${task_id}/${user}`;\n  try {\n    const response = await axios.get(url);\n    const rtnArr = Array.isArray(response === null || response === void 0 ? void 0 : response.data) ? response === null || response === void 0 ? void 0 : response.data : [];\n    return rtnArr;\n  } catch (err) {\n    return [];\n  }\n}\n\n// POST /tasks/create/{user}\n// create new task\nasync function postNewTask(user, taskObj) {\n  const url = `${rootURL}/tasks/create/${user}`;\n  try {\n    const response = await axios.post(url, taskObj);\n    return response.status;\n  } catch (err) {\n    throw new Error(`Error when calling ${url}`);\n  }\n}\n\n// DELETE /tasks/{task_id}/{user}\n// delete task\nasync function deleteTask(user, task_id) {\n  const url = `${rootURL}/tasks/${task_id}/${user}`;\n  try {\n    const response = await axios.delete(url);\n    return response.status;\n  } catch (err) {\n    throw new Error(`Error when calling ${url}`);\n  }\n}\n\n// POST /tasks/{task_id}/{user}\n// update existing task\nasync function putTask(user, task_id, newTask) {\n  const url = `${rootURL}/tasks/${task_id}/${user}`;\n  try {\n    const response = await axios.put(url, newTask);\n    return response.status;\n  } catch (err) {\n    throw new Error(`Error when calling ${url}`);\n  }\n}\n\n// For compatibility\nconst postUpdateTask = putTask;\nexport { getTask, getTaskList, postNewTask, deleteTask, putTask, postUpdateTask };","map":{"version":3,"names":["axios","rootURL","getTaskList","user","url","response","get","rtnArr","Array","isArray","data","err","getTask","task_id","postNewTask","taskObj","post","status","Error","deleteTask","delete","putTask","newTask","put","postUpdateTask"],"sources":["C:/Users/pojoj/Documents/CIS350APP/naurrrwhalsAppDeployment/naur-app/src/modules/taskApi.js"],"sourcesContent":["/* eslint-disable camelcase */\r\nimport axios from 'axios';\r\n\r\nimport rootURL from './url';\r\n\r\n// GET /tasks/taskList/{user}\r\n// get tasklist\r\nasync function getTaskList(user) {\r\n  const url = `${rootURL}/tasks/tasklist/${user}`;\r\n  try {\r\n    const response = await axios.get(url);\r\n    const rtnArr = Array.isArray(response?.data) ? response?.data : [];\r\n    return rtnArr;\r\n  } catch (err) {\r\n    return [];\r\n  }\r\n}\r\n\r\n// GET /tasks/{task_id}/{user}\r\n// get tasklist\r\nasync function getTask(user, task_id) {\r\n  const url = `${rootURL}/tasks/${task_id}/${user}`;\r\n  try {\r\n    const response = await axios.get(url);\r\n    const rtnArr = Array.isArray(response?.data) ? response?.data : [];\r\n    return rtnArr;\r\n  } catch (err) {\r\n    return [];\r\n  }\r\n}\r\n\r\n// POST /tasks/create/{user}\r\n// create new task\r\nasync function postNewTask(user, taskObj) {\r\n  const url = `${rootURL}/tasks/create/${user}`;\r\n  try {\r\n    const response = await axios.post(url, taskObj);\r\n    return response.status;\r\n  } catch (err) {\r\n    throw new Error(`Error when calling ${url}`);\r\n  }\r\n}\r\n\r\n// DELETE /tasks/{task_id}/{user}\r\n// delete task\r\nasync function deleteTask(user, task_id) {\r\n  const url = `${rootURL}/tasks/${task_id}/${user}`;\r\n  try {\r\n    const response = await axios.delete(url);\r\n    return response.status;\r\n  } catch (err) {\r\n    throw new Error(`Error when calling ${url}`);\r\n  }\r\n}\r\n\r\n// POST /tasks/{task_id}/{user}\r\n// update existing task\r\nasync function putTask(user, task_id, newTask) {\r\n  const url = `${rootURL}/tasks/${task_id}/${user}`;\r\n  try {\r\n    const response = await axios.put(url, newTask);\r\n    return response.status;\r\n  } catch (err) {\r\n    throw new Error(`Error when calling ${url}`);\r\n  }\r\n}\r\n\r\n// For compatibility\r\nconst postUpdateTask = putTask;\r\n\r\nexport {\r\n  getTask, getTaskList, postNewTask, deleteTask, putTask, postUpdateTask,\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,OAAO,MAAM,OAAO;;AAE3B;AACA;AACA,eAAeC,WAAW,CAACC,IAAI,EAAE;EAC/B,MAAMC,GAAG,GAAI,GAAEH,OAAQ,mBAAkBE,IAAK,EAAC;EAC/C,IAAI;IACF,MAAME,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAACF,GAAG,CAAC;IACrC,MAAMG,MAAM,GAAGC,KAAK,CAACC,OAAO,CAACJ,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEK,IAAI,CAAC,GAAGL,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEK,IAAI,GAAG,EAAE;IAClE,OAAOH,MAAM;EACf,CAAC,CAAC,OAAOI,GAAG,EAAE;IACZ,OAAO,EAAE;EACX;AACF;;AAEA;AACA;AACA,eAAeC,OAAO,CAACT,IAAI,EAAEU,OAAO,EAAE;EACpC,MAAMT,GAAG,GAAI,GAAEH,OAAQ,UAASY,OAAQ,IAAGV,IAAK,EAAC;EACjD,IAAI;IACF,MAAME,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAACF,GAAG,CAAC;IACrC,MAAMG,MAAM,GAAGC,KAAK,CAACC,OAAO,CAACJ,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEK,IAAI,CAAC,GAAGL,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEK,IAAI,GAAG,EAAE;IAClE,OAAOH,MAAM;EACf,CAAC,CAAC,OAAOI,GAAG,EAAE;IACZ,OAAO,EAAE;EACX;AACF;;AAEA;AACA;AACA,eAAeG,WAAW,CAACX,IAAI,EAAEY,OAAO,EAAE;EACxC,MAAMX,GAAG,GAAI,GAAEH,OAAQ,iBAAgBE,IAAK,EAAC;EAC7C,IAAI;IACF,MAAME,QAAQ,GAAG,MAAML,KAAK,CAACgB,IAAI,CAACZ,GAAG,EAAEW,OAAO,CAAC;IAC/C,OAAOV,QAAQ,CAACY,MAAM;EACxB,CAAC,CAAC,OAAON,GAAG,EAAE;IACZ,MAAM,IAAIO,KAAK,CAAE,sBAAqBd,GAAI,EAAC,CAAC;EAC9C;AACF;;AAEA;AACA;AACA,eAAee,UAAU,CAAChB,IAAI,EAAEU,OAAO,EAAE;EACvC,MAAMT,GAAG,GAAI,GAAEH,OAAQ,UAASY,OAAQ,IAAGV,IAAK,EAAC;EACjD,IAAI;IACF,MAAME,QAAQ,GAAG,MAAML,KAAK,CAACoB,MAAM,CAAChB,GAAG,CAAC;IACxC,OAAOC,QAAQ,CAACY,MAAM;EACxB,CAAC,CAAC,OAAON,GAAG,EAAE;IACZ,MAAM,IAAIO,KAAK,CAAE,sBAAqBd,GAAI,EAAC,CAAC;EAC9C;AACF;;AAEA;AACA;AACA,eAAeiB,OAAO,CAAClB,IAAI,EAAEU,OAAO,EAAES,OAAO,EAAE;EAC7C,MAAMlB,GAAG,GAAI,GAAEH,OAAQ,UAASY,OAAQ,IAAGV,IAAK,EAAC;EACjD,IAAI;IACF,MAAME,QAAQ,GAAG,MAAML,KAAK,CAACuB,GAAG,CAACnB,GAAG,EAAEkB,OAAO,CAAC;IAC9C,OAAOjB,QAAQ,CAACY,MAAM;EACxB,CAAC,CAAC,OAAON,GAAG,EAAE;IACZ,MAAM,IAAIO,KAAK,CAAE,sBAAqBd,GAAI,EAAC,CAAC;EAC9C;AACF;;AAEA;AACA,MAAMoB,cAAc,GAAGH,OAAO;AAE9B,SACET,OAAO,EAAEV,WAAW,EAAEY,WAAW,EAAEK,UAAU,EAAEE,OAAO,EAAEG,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}