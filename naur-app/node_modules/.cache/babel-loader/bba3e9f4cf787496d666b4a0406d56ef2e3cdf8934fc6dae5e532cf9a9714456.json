{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pojoj\\\\Documents\\\\CIS350APP\\\\naurrrwhalsAppDeployment\\\\naur-app\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport { React, useState } from 'react';\nimport '../assets/Register.css';\n// import { postMessagingUser } from '../modules/messageApi';\nimport { postRegister } from '../modules/loginApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction usernameError(str) {\n  if (!str.match(/^[A-Za-z0-9_]*$/)) {\n    return 'Username must be made up of letters, numbers, or underscores';\n  }\n  if (!str.match(/^[A-Za-z_][A-Za-z0-9_]*$/)) {\n    return 'Username must start with a letter or underscore';\n  }\n  if (!str.match(/[A-Za-z0-9]/)) {\n    return 'Username must contain contain at least one letter or number';\n  }\n  if (!(str.length >= 3)) {\n    return 'Username must be at least 3 characters long';\n  }\n  return '';\n}\n\n// Returns error if the given string is not a valid password\nfunction passwordError(str) {\n  if (!str.match(/^[A-Za-z0-9\\\\!\"#$%&'()*+,\\-./:;<=>?@[\\]^_`{|}~]+$/)) {\n    return 'Password contains illegal character';\n  }\n  if (!(str.length >= 6)) {\n    return 'Password must be at least 6 characters long';\n  }\n  return '';\n}\nfunction Register(_ref) {\n  _s();\n  let {\n    setUsername,\n    setNewUserState\n  } = _ref;\n  const [errorMessage, setErrorMessage] = useState('');\n  function handleUsernameInput(e) {\n    const name = e.target.value;\n    if (name === '') {\n      setErrorMessage('');\n    } else {\n      setErrorMessage(usernameError(name));\n    }\n  }\n  function handlePasswordInput(e) {\n    const pword = e.target.value;\n    if (pword === '') {\n      setErrorMessage('');\n    } else {\n      setErrorMessage(passwordError(pword));\n    }\n  }\n  function handleRegister(e) {\n    e.preventDefault();\n    const name = document.getElementById('username').value;\n    const pword = document.getElementById('password').value;\n    const nameErr = usernameError(name);\n    const pwordErr = passwordError(pword);\n    if (nameErr) {\n      setErrorMessage(nameErr);\n      return;\n    }\n    if (pwordErr) {\n      setErrorMessage(pwordErr);\n      return;\n    }\n    (async function handleRegisterAsync() {\n      const status = await postRegister(name, pword);\n      if (status === 403) {\n        setErrorMessage('User already exists');\n        return;\n      }\n      if (status < 200 || status >= 300) {\n        setErrorMessage('An unknown error occured');\n        return;\n      }\n      // eslint-disable-next-line no-param-reassign\n      setUsername(name);\n    })();\n  }\n  function handleBack() {\n    setNewUserState(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registrationWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"sec1\",\n      children: \"tell us a little about yourself\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: [\"\\xA0\", errorMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleRegister,\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          children: \"CONFIRM USERNAME*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"lInputs\",\n          type: \"text\",\n          id: \"username\",\n          placeholder: \"Johndoe\",\n          onChange: handleUsernameInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          children: \"CONFIRM PASSWORD*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"lInputs\",\n          type: \"password\",\n          id: \"password\",\n          placeholder: \"password123\",\n          onChange: handlePasswordInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"lButtons\",\n        type: \"submit\",\n        onClick: handleRegister,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"lButtons\",\n        type: \"submit\",\n        onClick: handleBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"Qa+fXmSUSiSzKMj9v3Zv5vD0nos=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","postRegister","usernameError","str","match","length","passwordError","Register","setUsername","setNewUserState","errorMessage","setErrorMessage","handleUsernameInput","e","name","target","value","handlePasswordInput","pword","handleRegister","preventDefault","document","getElementById","nameErr","pwordErr","handleRegisterAsync","status","handleBack"],"sources":["C:/Users/pojoj/Documents/CIS350APP/naurrrwhalsAppDeployment/naur-app/src/components/Register.js"],"sourcesContent":["import { React, useState } from 'react';\r\nimport '../assets/Register.css';\r\n// import { postMessagingUser } from '../modules/messageApi';\r\nimport { postRegister } from '../modules/loginApi';\r\n\r\nfunction usernameError(str) {\r\n  if (!str.match(/^[A-Za-z0-9_]*$/)) {\r\n    return 'Username must be made up of letters, numbers, or underscores';\r\n  }\r\n  if (!str.match(/^[A-Za-z_][A-Za-z0-9_]*$/)) {\r\n    return 'Username must start with a letter or underscore';\r\n  }\r\n  if (!str.match(/[A-Za-z0-9]/)) {\r\n    return 'Username must contain contain at least one letter or number';\r\n  }\r\n  if (!(str.length >= 3)) {\r\n    return 'Username must be at least 3 characters long';\r\n  }\r\n  return '';\r\n}\r\n\r\n// Returns error if the given string is not a valid password\r\nfunction passwordError(str) {\r\n  if (!str.match(/^[A-Za-z0-9\\\\!\"#$%&'()*+,\\-./:;<=>?@[\\]^_`{|}~]+$/)) {\r\n    return 'Password contains illegal character';\r\n  }\r\n  if (!(str.length >= 6)) {\r\n    return 'Password must be at least 6 characters long';\r\n  }\r\n  return '';\r\n}\r\n\r\nfunction Register({ setUsername, setNewUserState }) {\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  function handleUsernameInput(e) {\r\n    const name = e.target.value;\r\n    if (name === '') {\r\n      setErrorMessage('');\r\n    } else {\r\n      setErrorMessage(usernameError(name));\r\n    }\r\n  }\r\n\r\n  function handlePasswordInput(e) {\r\n    const pword = e.target.value;\r\n    if (pword === '') {\r\n      setErrorMessage('');\r\n    } else {\r\n      setErrorMessage(passwordError(pword));\r\n    }\r\n  }\r\n\r\n  function handleRegister(e) {\r\n    e.preventDefault();\r\n    const name = document.getElementById('username').value;\r\n    const pword = document.getElementById('password').value;\r\n    const nameErr = usernameError(name);\r\n    const pwordErr = passwordError(pword);\r\n    if (nameErr) {\r\n      setErrorMessage(nameErr);\r\n      return;\r\n    }\r\n    if (pwordErr) {\r\n      setErrorMessage(pwordErr);\r\n      return;\r\n    }\r\n\r\n    (async function handleRegisterAsync() {\r\n      const status = await postRegister(name, pword);\r\n      if (status === 403) {\r\n        setErrorMessage('User already exists');\r\n        return;\r\n      }\r\n      if ((status < 200) || (status >= 300)) {\r\n        setErrorMessage('An unknown error occured');\r\n        return;\r\n      }\r\n      // eslint-disable-next-line no-param-reassign\r\n      setUsername(name);\r\n    }());\r\n  }\r\n\r\n  function handleBack() {\r\n    setNewUserState(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"registrationWrapper\">\r\n      <div>\r\n        <h1>Welcome!</h1>\r\n      </div>\r\n      <div id=\"sec1\">\r\n        tell us a little about yourself\r\n      </div>\r\n      <div>\r\n        <div className=\"error\">\r\n          &nbsp;\r\n          {errorMessage}\r\n        </div>\r\n        <form onSubmit={handleRegister}>\r\n          <text>CONFIRM USERNAME*</text>\r\n          <input className=\"lInputs\" type=\"text\" id=\"username\" placeholder=\"Johndoe\" onChange={handleUsernameInput} />\r\n          <br />\r\n          <text>CONFIRM PASSWORD*</text>\r\n          <input className=\"lInputs\" type=\"password\" id=\"password\" placeholder=\"password123\" onChange={handlePasswordInput} />\r\n        </form>\r\n        <button className=\"lButtons\" type=\"submit\" onClick={handleRegister}>Register</button>\r\n        <button className=\"lButtons\" type=\"submit\" onClick={handleBack}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}