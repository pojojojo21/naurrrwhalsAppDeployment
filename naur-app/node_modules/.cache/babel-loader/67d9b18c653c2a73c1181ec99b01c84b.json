{"ast":null,"code":"/* eslint-disable object-property-newline */\n\n/* eslint-disable camelcase */\nimport axios from 'axios';\nimport rootURL from './url'; // =====================================================\n// === The functions corresponding to the actual API ===\n// =====================================================\n// GET /wellness/survey/user\n\nasync function getWellnessSurvey(user) {\n  const url = `${rootURL}/wellness/survey/${user}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (err) {\n    throw new Error(`Error when calling ${url}`);\n  }\n} // PUT /wellness/survey/user\n\n\nasync function putWellnessSurvey(user, survey) {\n  const url = `${rootURL}/wellness/survey/${user}`;\n\n  try {\n    const response = await axios.put(url, survey);\n    return response.data;\n  } catch (err) {\n    throw new Error(`Error when calling ${url}`);\n  }\n} // POST /wellness/survey/user\n\n\nasync function postWellnessSurvey(user, survey) {\n  const url = `${rootURL}/wellness/survey/${user}`;\n\n  try {\n    const response = await axios.post(url, survey);\n    return response.data;\n  } catch (err) {\n    throw new Error(`Error when calling ${url}`);\n  }\n} // Exactly the same as PUT, added for compatibility\n// =========================================\n// === Functions added for compatability ===\n// =========================================\n\n\nfunction propertyGetter(property) {\n  return async username => {\n    try {\n      return (await getWellnessSurvey(username))[property];\n    } catch (err) {\n      return null;\n    }\n  };\n}\n\nfunction propertyPutter(property) {\n  return async (username, v) => {\n    try {\n      return (await putWellnessSurvey(username, {\n        [property]: v\n      }))[property];\n    } catch (err) {\n      return null;\n    }\n  };\n} // SURVEY.js API - update respective inputs as user fills out the survey\n\n\nconst PUT_sleepSat = propertyPutter('sleepSat');\nconst PUT_workSat = propertyPutter('workSat');\nconst PUT_relaxSat = propertyPutter('relaxSat');\nconst PUT_mood = propertyPutter('mood');\nconst PUT_priority = propertyPutter('priority'); // PRIORITY.js API - update respective inputs as user fills out their priority\n\nconst PUT_desiredHoursSleep = propertyPutter('desired_hours_sleep');\nconst PUT_desiredTimeSleep = propertyPutter('desired_time_sleep');\nconst PUT_desiredHoursWork = propertyPutter('desired_hours_work');\nconst PUT_desiredWorkBlock = propertyPutter('desired_block_work');\nconst PUT_desiredWorkEndTime = propertyPutter('desired_time_work');\nconst PUT_desiredHoursRelax = propertyPutter('desired_hours_relax');\nconst PUT_desiredRelaxActivity = propertyPutter('desired_activity'); // RECOMMENDATIONS.js API\n\nconst GET_desiredHoursSleep = propertyGetter('desired_hours_sleep');\nconst GET_desiredTimeSleep = propertyGetter('desired_time_sleep');\nconst GET_desiredHoursWork = propertyGetter('desired_hours_work');\nconst GET_desiredWorkBlock = propertyGetter('desired_block_work');\nconst GET_desiredWorkEndTime = propertyGetter('desired_time_work');\nconst GET_desiredHoursRelax = propertyGetter('desired_hours_relax');\nconst GET_desiredRelaxActivity = propertyGetter('desired_activity'); // ALL TOGETHER - After updating all survey inputs from defaults, post the latest survey to the db\n\nconst POST_dailySurvey = postWellnessSurvey;\nexport { PUT_sleepSat, PUT_workSat, PUT_relaxSat, PUT_mood, PUT_priority, PUT_desiredHoursSleep, PUT_desiredTimeSleep, PUT_desiredHoursWork, PUT_desiredWorkBlock, PUT_desiredWorkEndTime, PUT_desiredHoursRelax, PUT_desiredRelaxActivity, GET_desiredHoursSleep, GET_desiredTimeSleep, GET_desiredHoursWork, GET_desiredWorkBlock, GET_desiredWorkEndTime, GET_desiredHoursRelax, GET_desiredRelaxActivity, POST_dailySurvey };","map":{"version":3,"sources":["C:/Users/pojoj/Documents/CIS350APP/naurrrwhalsAppDeployment/naur-app/src/modules/wellnessApi.js"],"names":["axios","rootURL","getWellnessSurvey","user","url","response","get","data","err","Error","putWellnessSurvey","survey","put","postWellnessSurvey","post","propertyGetter","property","username","propertyPutter","v","PUT_sleepSat","PUT_workSat","PUT_relaxSat","PUT_mood","PUT_priority","PUT_desiredHoursSleep","PUT_desiredTimeSleep","PUT_desiredHoursWork","PUT_desiredWorkBlock","PUT_desiredWorkEndTime","PUT_desiredHoursRelax","PUT_desiredRelaxActivity","GET_desiredHoursSleep","GET_desiredTimeSleep","GET_desiredHoursWork","GET_desiredWorkBlock","GET_desiredWorkEndTime","GET_desiredHoursRelax","GET_desiredRelaxActivity","POST_dailySurvey"],"mappings":"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","sourcesContent":["/* eslint-disable object-property-newline */\r\n/* eslint-disable camelcase */\r\nimport axios from 'axios';\r\n\r\nimport rootURL from './url';\r\n\r\n// =====================================================\r\n// === The functions corresponding to the actual API ===\r\n// =====================================================\r\n\r\n// GET /wellness/survey/user\r\nasync function getWellnessSurvey(user) {\r\n  const url = `${rootURL}/wellness/survey/${user}`;\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (err) {\r\n    throw new Error(`Error when calling ${url}`);\r\n  }\r\n}\r\n\r\n// PUT /wellness/survey/user\r\nasync function putWellnessSurvey(user, survey) {\r\n  const url = `${rootURL}/wellness/survey/${user}`;\r\n  try {\r\n    const response = await axios.put(url, survey);\r\n    return response.data;\r\n  } catch (err) {\r\n    throw new Error(`Error when calling ${url}`);\r\n  }\r\n}\r\n\r\n// POST /wellness/survey/user\r\nasync function postWellnessSurvey(user, survey) {\r\n  const url = `${rootURL}/wellness/survey/${user}`;\r\n  try {\r\n    const response = await axios.post(url, survey);\r\n    return response.data;\r\n  } catch (err) {\r\n    throw new Error(`Error when calling ${url}`);\r\n  }\r\n}\r\n// Exactly the same as PUT, added for compatibility\r\n\r\n// =========================================\r\n// === Functions added for compatability ===\r\n// =========================================\r\n\r\nfunction propertyGetter(property) {\r\n  return async (username) => {\r\n    try {\r\n      return (await getWellnessSurvey(username))[property];\r\n    } catch (err) {\r\n      return null;\r\n    }\r\n  };\r\n}\r\n\r\nfunction propertyPutter(property) {\r\n  return async (username, v) => {\r\n    try {\r\n      return (await putWellnessSurvey(username, { [property]: v }))[property];\r\n    } catch (err) {\r\n      return null;\r\n    }\r\n  };\r\n}\r\n\r\n// SURVEY.js API - update respective inputs as user fills out the survey\r\n\r\nconst PUT_sleepSat = propertyPutter('sleepSat');\r\nconst PUT_workSat = propertyPutter('workSat');\r\nconst PUT_relaxSat = propertyPutter('relaxSat');\r\nconst PUT_mood = propertyPutter('mood');\r\nconst PUT_priority = propertyPutter('priority');\r\n\r\n// PRIORITY.js API - update respective inputs as user fills out their priority\r\n\r\nconst PUT_desiredHoursSleep = propertyPutter('desired_hours_sleep');\r\nconst PUT_desiredTimeSleep = propertyPutter('desired_time_sleep');\r\nconst PUT_desiredHoursWork = propertyPutter('desired_hours_work');\r\nconst PUT_desiredWorkBlock = propertyPutter('desired_block_work');\r\nconst PUT_desiredWorkEndTime = propertyPutter('desired_time_work');\r\nconst PUT_desiredHoursRelax = propertyPutter('desired_hours_relax');\r\nconst PUT_desiredRelaxActivity = propertyPutter('desired_activity');\r\n\r\n// RECOMMENDATIONS.js API\r\n\r\nconst GET_desiredHoursSleep = propertyGetter('desired_hours_sleep');\r\nconst GET_desiredTimeSleep = propertyGetter('desired_time_sleep');\r\nconst GET_desiredHoursWork = propertyGetter('desired_hours_work');\r\nconst GET_desiredWorkBlock = propertyGetter('desired_block_work');\r\nconst GET_desiredWorkEndTime = propertyGetter('desired_time_work');\r\nconst GET_desiredHoursRelax = propertyGetter('desired_hours_relax');\r\nconst GET_desiredRelaxActivity = propertyGetter('desired_activity');\r\n\r\n// ALL TOGETHER - After updating all survey inputs from defaults, post the latest survey to the db\r\nconst POST_dailySurvey = postWellnessSurvey;\r\n\r\nexport {\r\n  PUT_sleepSat, PUT_workSat, PUT_relaxSat, PUT_mood, PUT_priority,\r\n  PUT_desiredHoursSleep, PUT_desiredTimeSleep, PUT_desiredHoursWork,\r\n  PUT_desiredWorkBlock, PUT_desiredWorkEndTime, PUT_desiredHoursRelax, PUT_desiredRelaxActivity,\r\n  GET_desiredHoursSleep, GET_desiredTimeSleep, GET_desiredHoursWork,\r\n  GET_desiredWorkBlock, GET_desiredWorkEndTime, GET_desiredHoursRelax, GET_desiredRelaxActivity,\r\n  POST_dailySurvey,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}